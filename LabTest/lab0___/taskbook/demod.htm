<!-- Programming Taskbook 4.4 | Copyright (c) M. Abramyan, 1998-2005 -->
<html><head><meta http-equiv="pragma" content="no-cache"><meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<title>Programming Taskbook 4.4 | Задания демо-версии</title>
</head><body vlink="#003366" link="#003366"><style>
H1{font-family:"Arial";font-size:20pt;text-indent:0;margin-top:10; margin-right:10; margin-bottom:0; margin-left:10;}
H2{font-family:"Arial";font-size:16pt;text-indent:0;margin: 20 10 0 10;}
H3{font-family:"Arial";font-size:12pt;text-indent:0;margin: 20 10 0 10;}
P{font-family:"Times New Roman";font-size:12pt;text-indent:0;margin-top:0; margin-right:10; margin-bottom:0; margin-left:10;}
center{font-family:"Times New Roman";font-size:12pt;}
TABLE{margin-top:0; margin-bottom:0;}
TD{font-family:"Times New Roman";font-size:12pt;}
LI{font-family:"Times New Roman";font-size:12pt;}
UL{font-family:"Times New Roman";font-size:12pt;}
P.tsk{text-align:left;text-indent:-50;margin-top:5; margin-left:60;}
P.hnt{text-align:left;margin-left:60;}
P.hntc{text-align:left;margin-left:60;}
P.hntq{text-align:left;margin-left: 60;}
P.cmt{text-align:left;margin-top:5;}
P.ttt{text-align:left;}
P.cnt{text-align:center;}
P.qte{text-align:left;margin-left:120;margin-top:0;margin-bottom:0;}
blockquote{font-family:"Times New Roman";text-align:left;margin-left:100;margin-top:0; margin-bottom:0;}
P.cmtc{text-align:left;}
P.cmtq{text-align:left;}
SUB{font-family:"Times New Roman";font-size:8pt;}
SUP{font-family:"Times New Roman";font-size:8pt;}
P.foot{text-align:right;font-size:8pt;margin-right:0;}
</style>
<script language="javascript" src="back.js">
</script>
<font face="Arial" size=+3><b>Programming Taskbook 4</b><br></font>
<font face="Arial" size=+1>Электронный задачник по программированию</font>
<div align=right><font size = -1>&copy;&nbsp;&nbsp;М.&nbsp;Э.&nbsp;Абрамян,&nbsp;1998&#150;2005</font></div>
<hr noshade>
<div align=center><font size=-1>
[<a href="indexd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/indexd.htm">Общее&nbsp;описание</a>] [<a href="remarksd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/remarksd.htm">Предварительные&nbsp;замечания</a>] [<a href="begind.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/begind.htm">Ввод&nbsp;и&nbsp;вывод&nbsp;данных,&nbsp;оператор&nbsp;присваивания</a>] [<a href="integerd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/integerd.htm">Целые&nbsp;числа</a>] [<a href="booleand.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/booleand.htm">Логические&nbsp;выражения</a>] [<a href="ifd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/ifd.htm">Условный&nbsp;оператор</a>] [<a href="cased.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/cased.htm">Оператор&nbsp;выбора</a>] [<a href="ford.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/ford.htm">Цикл&nbsp;с&nbsp;параметром</a>] [<a href="whiled.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/whiled.htm">Цикл&nbsp;с&nbsp;условием</a>] [<a href="seriesd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/seriesd.htm">Последовательности</a>] [<a href="procd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/procd.htm">Процедуры&nbsp;и&nbsp;функции</a>] [<a href="minmaxd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/minmaxd.htm">Минимумы&nbsp;и&nbsp;максимумы</a>] [<a href="arrayd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/arrayd.htm">Одномерные&nbsp;массивы</a>] [<a href="matrixd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/matrixd.htm">Двумерные&nbsp;массивы&nbsp;(матрицы)</a>] [<a href="stringd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/stringd.htm">Символы&nbsp;и&nbsp;строки</a>] [<a href="filed.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/filed.htm">Двоичные&nbsp;(типизированные)&nbsp;файлы</a>] [<a href="textd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/textd.htm">Текстовые&nbsp;файлы</a>] [<a href="paramd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/paramd.htm">Составные&nbsp;типы&nbsp;данных&nbsp;в&nbsp;процедурах&nbsp;и&nbsp;функциях</a>] [<a href="recurd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/recurd.htm">Рекурсия</a>] [<a href="pointerd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/pointerd.htm">Указатели&nbsp;и&nbsp;динамические&nbsp;структуры&nbsp;данных</a>] [<b>Задания&nbsp;демо-версии</b>]
</font></div><hr noshade><div align=right><font size=-1>Стиль: [<b>DOS-программа</b>] [<a href="demow.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/demow.htm">Windows-программа</a>] [<a href="demo.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/demo.htm">Книга</a>]</font></div>

<p class="cmt"><h1>Задания демо-версии</h1></p>
<p class="cmt">В&nbsp;данной группе собраны примеры заданий из различных разделов задачника Programming Taskbook. Все эти&nbsp;задания можно выполнять в&nbsp;демонстрационной версии задачника, не требующей специальной регистрации. В&nbsp;начале формулировки каждого задания в&nbsp;квадратных скобках указывается имя, под&nbsp;которым это&nbsp;задание входит в&nbsp;полный вариант задачника. <h2>Скалярные типы данных</h2></p>
<p class="tsk"><font face="Arial">Demo1*</font>. [Begin3] Даны стороны прямоугольника&nbsp;a и&nbsp;b.  Найти его площадь&nbsp;S&nbsp;=&nbsp;a<font face="Courier">*</font>b и&nbsp;периметр&nbsp;P&nbsp;=&nbsp;2<font face="Courier">*</font>(a&nbsp;+&nbsp;b).</p>
<p class="tsk"><font face="Arial">Demo2*</font>. [Begin7] Найти длину окружности&nbsp;L и&nbsp;площадь круга&nbsp;S заданного радиуса&nbsp;R: </p><center>L&nbsp;=&nbsp;2<font face="Courier">*</font>pi<font face="Courier">*</font>R, &nbsp; &nbsp; &nbsp; &nbsp;S&nbsp;=&nbsp;pi<font face="Courier">*</font>R^2.</center><p class="hntc">В&nbsp;качестве значения&nbsp;pi использовать&nbsp;3.14.</p>
<p class="tsk"><font face="Arial">Demo3*</font>. [Begin10] Даны два ненулевых числа. Найти сумму, разность, произведение и&nbsp;частное их&nbsp;квадратов.</p>
<p class="tsk"><font face="Arial">Demo4*</font>. [Begin17] Даны три точки&nbsp;A, B,&nbsp;C на&nbsp;числовой оси. Найти длины отрезков&nbsp;AC и&nbsp;BC и&nbsp;их&nbsp;сумму.</p>
<p class="tsk"><font face="Arial">Demo5*</font>. [Begin22] Поменять местами содержимое переменных&nbsp;A и&nbsp;B и&nbsp;вывести новые значения&nbsp;A и&nbsp;B.</p>
<p class="tsk"><font face="Arial">Demo6*</font>. [Begin27] Дано число&nbsp;A. Вычислить&nbsp;A^8, используя вспомогательную переменную и&nbsp;три операции умножения. Для этого последовательно находить A^2, A^4, A^8. Вывести все найденные степени числа&nbsp;A.</p>
<p class="tsk"><font face="Arial">Demo7*</font>. [Integer3] Дан размер файла в байтах. Используя операцию деления нацело, найти количество полных килобайтов, которые занимает данный файл (1&nbsp;килобайт&nbsp;=&nbsp;1024&nbsp;байта).</p>
<p class="tsk"><font face="Arial">Demo8*</font>. [Integer8] Дано двузначное число. Вывести число, полученное при перестановке цифр исходного числа.</p>
<p class="tsk"><font face="Arial">Demo9*</font>. [Integer11] Дано трехзначное число. Найти сумму и&nbsp;произведение его цифр.</p>
<p class="tsk"><font face="Arial">Demo10*</font>. [Integer20] С&nbsp;начала суток прошло N&nbsp;секунд (N&nbsp;&#151; целое). Найти количество полных часов, прошедших с&nbsp;начала суток.</p>
<p class="tsk"><font face="Arial">Demo11*</font>. [Integer29] Даны целые положительные числа&nbsp;A, B,&nbsp;C. На&nbsp;прямоугольнике размера&nbsp;A&nbsp;x&nbsp;B размещено максимально возможное количество квадратов со&nbsp;стороной&nbsp;C (без&nbsp;наложений). Найти количество квадратов, размещенных на&nbsp;прямоугольнике, а&nbsp;также площадь незанятой части прямоугольника.</p>
<p class="tsk"><font face="Arial">Demo12*</font>. [Integer30] Дан номер некоторого года (целое положительное число). Определить соответствующий ему номер столетия, учитывая, что, к&nbsp;примеру, началом 20&nbsp;столетия был 1901&nbsp;год.</p>
<p class="tsk"><font face="Arial">Demo13*</font>. [Boolean1] Дано целое число&nbsp;A. Проверить истинность высказывания: "Число&nbsp;A является положительным".</p>
<p class="tsk"><font face="Arial">Demo14*</font>. [Boolean7] Даны три целых числа: A, B,&nbsp;C. Проверить истинность высказывания: "Число&nbsp;B находится между числами&nbsp;A и&nbsp;C".</p>
<p class="tsk"><font face="Arial">Demo15*</font>. [Boolean10] Даны два целых числа: A,&nbsp;B. Проверить истинность высказывания: "Ровно одно из&nbsp;чисел&nbsp;A и&nbsp;B нечетное".</p>
<p class="tsk"><font face="Arial">Demo16*</font>. [Boolean20] Дано трехзначное число. Проверить истинность высказывания: "Все цифры данного числа различны".</p>
<p class="tsk"><font face="Arial">Demo17*</font>. [Boolean29] Даны числа&nbsp;x, y, x1,&nbsp;y1, x2,&nbsp;y2. Проверить истинность высказывания: "Точка с&nbsp;координатами (x,&nbsp;y) лежит внутри прямоугольника, левая верхняя вершина которого имеет координаты (x1,&nbsp;y1), правая нижняя&nbsp;&#151; (x2,&nbsp;y2), а&nbsp;стороны параллельны координатным осям".</p>
<p class="cmt"><h2>Управляющие операторы</h2></p>
<p class="tsk"><font face="Arial">Demo18*</font>. [If4] Даны три целых числа. Найти количество положительных чисел в&nbsp;исходном наборе.</p>
<p class="tsk"><font face="Arial">Demo19*</font>. [If6] Даны два числа. Вывести большее из&nbsp;них.</p>
<p class="tsk"><font face="Arial">Demo20*</font>. [If8] Даны два числа. Вывести вначале большее, а&nbsp;затем меньшее из&nbsp;них.</p>
<p class="tsk"><font face="Arial">Demo21*</font>. [If12] Даны три числа. Найти наименьшее из&nbsp;них.</p>
<p class="tsk"><font face="Arial">Demo22*</font>. [If22] Даны координаты точки, не&nbsp;лежащей на&nbsp;координатных осях&nbsp;OX и&nbsp;OY. Определить номер координатной четверти, в&nbsp;которой находится данная точка.</p>
<p class="tsk"><font face="Arial">Demo23*</font>. [If26] Для данного вещественного&nbsp;x найти значение следующей функции&nbsp;f, принимающей вещественные значения: </p><center><table><tr><td align=right>&nbsp;<td align=center>&nbsp;<td align=right>&#150;x,<td align=left>если x&nbsp;&lt;=&nbsp;0, <tr><td align=right>f(x)<td align=center>&nbsp;=&nbsp;<td align=right>x^2,<td align=left>если 0&nbsp;&lt;&nbsp;x&nbsp;&lt;&nbsp;2, <tr><td align=right>&nbsp;<td align=center>&nbsp;<td align=right>4,<td align=left>если x&nbsp;&gt;=&nbsp;2.</table></center>
<p class="tsk"><font face="Arial">Demo24*</font>. [Case4] Дан номер месяца&nbsp;&#151; целое число в&nbsp;диапазоне&nbsp;1&#150;12 (1&nbsp;&#151; январь, 2&nbsp;&#151; февраль и&nbsp;т.&nbsp;д.). Определить количество дней в&nbsp;этом месяце для невисокосного года.</p>
<p class="tsk"><font face="Arial">Demo25*</font>. [Case9] Даны два целых числа:&nbsp;D (день) и&nbsp;M (месяц), определяющие правильную дату невисокосного года. Вывести значения&nbsp;D и&nbsp;M для даты, следующей за&nbsp;указанной.</p>
<p class="tsk"><font face="Arial">Demo26*</font>. [For5] Дано вещественное число&nbsp;&#151; цена 1&nbsp;кг конфет. Вывести стоимость 0.1, 0.2,&nbsp;&#133;&nbsp;, 1&nbsp;кг конфет.</p>
<p class="tsk"><font face="Arial">Demo27*</font>. [For12] Дано целое число&nbsp;N (&gt;&nbsp;0). Найти произведение</p><center>1.1&nbsp;<font face="Courier">*</font>&nbsp;1.2&nbsp;<font face="Courier">*</font>&nbsp;1.3&nbsp;<font face="Courier">*</font>&nbsp;&#133;</center><p class="hntc">(N&nbsp;сомножителей).</p>
<p class="tsk"><font face="Arial">Demo28*</font>. [For13] Дано целое число&nbsp;N (&gt;&nbsp;0). Найти значение выражения</p><center>1.1&nbsp;&#150;&nbsp;1.2&nbsp;+&nbsp;1.3&nbsp;&#150;&nbsp;&#133;</center><p class="hntc">(N&nbsp;слагаемых, знаки чередуются). Условный оператор не&nbsp;использовать.</p>
<p class="tsk"><font face="Arial">Demo29*</font>. [For15] Дано вещественное число&nbsp;A и&nbsp;целое число&nbsp;N (&gt;&nbsp;0). Найти&nbsp;A в&nbsp;степени&nbsp;N: </p><center>A^N = A<font face="Courier">*</font>A<font face="Courier">*</font>&nbsp;&#133;&nbsp;<font face="Courier">*</font>A</center><p class="hntc">(числа&nbsp;A перемножаются&nbsp;N раз).</p>
<p class="tsk"><font face="Arial">Demo30*</font>. [For16] Дано вещественное число&nbsp;A и&nbsp;целое число&nbsp;N (&gt;&nbsp;0). Используя один цикл, вывести все целые степени числа&nbsp;A от&nbsp;1 до&nbsp;N.</p>
<p class="tsk"><font face="Arial">Demo31*</font>. [For19] Дано целое число&nbsp;N (&gt;&nbsp;0). Найти произведение</p><center>N!&nbsp;=&nbsp;1<font face="Courier">*</font>2<font face="Courier">*</font>&#133;<font face="Courier">*</font>N</center><p class="hntc">(N&#150;факториал). Чтобы избежать целочисленного переполнения, вычислять это произведение с&nbsp;помощью вещественной переменной и&nbsp;вывести его как вещественное число.</p>
<p class="tsk"><font face="Arial">Demo32*</font>. [For20] Дано целое число&nbsp;N (&gt;&nbsp;0). Используя один цикл, найти сумму </p><center>1!&nbsp;+&nbsp;2!&nbsp;+&nbsp;3!&nbsp;+&nbsp;&#133;&nbsp;+&nbsp;N!    </center><p class="hntc">(выражение N!&nbsp;&#151; N&#150;факториал&nbsp;&#151; обозначает произведение всех целых чисел от&nbsp;1 до&nbsp;N: &nbsp; &nbsp;N!&nbsp;=&nbsp;1<font face="Courier">*</font>2<font face="Courier">*</font>&#133;<font face="Courier">*</font>N). Чтобы избежать целочисленного переполнения, проводить вычисления с&nbsp;помощью вещественных переменных и&nbsp;вывести результат как вещественное число.</p>
<p class="tsk"><font face="Arial">Demo33*</font>. [For33] Дано целое число&nbsp;N (&gt;&nbsp;1). Последовательность чисел Фибоначчи&nbsp;F[K] (целого типа) определяется следующим образом: </p><center>F[1]&nbsp;=&nbsp;1, &nbsp; &nbsp; &nbsp; &nbsp;F[2]&nbsp;=&nbsp;1, &nbsp; &nbsp; &nbsp; &nbsp;F[K]&nbsp;=&nbsp;F[K&#150;2]&nbsp;+&nbsp;F[K&#150;1], &nbsp; &nbsp;K&nbsp;=&nbsp;3,&nbsp;4,&nbsp;&#133;&nbsp;.</center><p class="hntc">Вывести элементы F[1], F[2],&nbsp;...,&nbsp;F[N].</p>
<p class="tsk"><font face="Arial">Demo34*</font>. [For36] Даны целые положительные числа&nbsp;N и&nbsp;K. Найти сумму</p><center>1^K&nbsp;+&nbsp;2^K&nbsp;+&nbsp;&#133;&nbsp;+&nbsp;N^K.</center><p class="hntc">Чтобы избежать целочисленного переполнения, вычислять слагаемые этой суммы с&nbsp;помощью вещественной переменной и&nbsp;выводить результат как вещественное число.</p>
<p class="tsk"><font face="Arial">Demo35*</font>. [While1] Даны положительные числа&nbsp;A и&nbsp;B (A&nbsp;&gt;&nbsp;B). На&nbsp;отрезке длины&nbsp;A размещено максимально возможное количество отрезков длины&nbsp;B (без&nbsp;наложений). Не&nbsp;используя операции умножения и&nbsp;деления, найти длину незанятой части отрезка&nbsp;A.</p>
<p class="tsk"><font face="Arial">Demo36*</font>. [While2] Даны положительные числа&nbsp;A и&nbsp;B (A&nbsp;&gt;&nbsp;B). На&nbsp;отрезке длины&nbsp;A размещено максимально возможное количество отрезков длины&nbsp;B (без&nbsp;наложений). Не&nbsp;используя операции умножения и&nbsp;деления, найти количество отрезков&nbsp;B, размещенных на&nbsp;отрезке&nbsp;A.</p>
<p class="tsk"><font face="Arial">Demo37*</font>. [While4] Дано целое число&nbsp;N (&gt;&nbsp;0). Если оно является степенью числа&nbsp;3, то&nbsp;вывести True, если не&nbsp;является&nbsp;&#151; вывести False.</p>
<p class="tsk"><font face="Arial">Demo38*</font>. [While7] Дано целое число&nbsp;N (&gt;&nbsp;0). Найти наименьшее целое положительное число&nbsp;K, квадрат которого превосходит&nbsp;N: K^2&nbsp;&gt;&nbsp;N. Функцию извлечения квадратного корня не&nbsp;использовать.</p>
<p class="tsk"><font face="Arial">Demo39*</font>. [While11] Дано целое число&nbsp;N (&gt;&nbsp;1). Вывести наименьшее из&nbsp;целых чисел&nbsp;K, для которых сумма 1&nbsp;+&nbsp;2&nbsp;+&nbsp;&#133;&nbsp;+&nbsp;K будет больше или равна&nbsp;N, и&nbsp;саму эту сумму.</p>
<p class="tsk"><font face="Arial">Demo40*</font>. [While12] Дано целое число&nbsp;N (&gt;&nbsp;1). Вывести наибольшее из&nbsp;целых чисел&nbsp;K, для которых сумма 1&nbsp;+&nbsp;2&nbsp;+&nbsp;&#133;&nbsp;+&nbsp;K будет меньше или равна&nbsp;N, и&nbsp;саму эту сумму.</p>
<p class="tsk"><font face="Arial">Demo41*</font>. [While22] Дано целое число&nbsp;N (&gt;&nbsp;1). Если оно является простым, то&nbsp;есть не&nbsp;имеет положительных делителей, кроме&nbsp;1 и&nbsp;самого себя, то&nbsp;вывести True, иначе вывести False.</p>
<p class="tsk"><font face="Arial">Demo42*</font>. [While23] Даны целые положительные числа A и B. Найти их наибольший общий делитель (НОД), используя алгоритм Евклида: </p><center>НОД(A, B)&nbsp;=&nbsp;НОД(B, A&nbsp;mod&nbsp;B), &nbsp; &nbsp;если B&nbsp;&lt;&gt;&nbsp;0; &nbsp; &nbsp; &nbsp; &nbsp;НОД(A, 0)&nbsp;=&nbsp;A.</center>
<p class="cmt"><h2>Последовательности, процедуры&nbsp;и&nbsp;функции, минимумы&nbsp;и&nbsp;максимумы</h2></p>
<p class="tsk"><font face="Arial">Demo43*</font>. [Series1] Даны десять вещественных чисел. Найти их&nbsp;сумму.</p>
<p class="tsk"><font face="Arial">Demo44*</font>. [Series15] Дано целое число&nbsp;K и&nbsp;набор ненулевых целых чисел; признак его завершения&nbsp;&#151; число&nbsp;0. Вывести номер первого числа в&nbsp;наборе, большего&nbsp;K. Если таких чисел нет, то&nbsp;вывести&nbsp;0.</p>
<p class="tsk"><font face="Arial">Demo45*</font>. [Series16] Дано целое число&nbsp;K и&nbsp;набор ненулевых целых чисел; признак его завершения&nbsp;&#151; число&nbsp;0. Вывести номер последнего числа в&nbsp;наборе, большего&nbsp;K. Если таких чисел нет, то&nbsp;вывести&nbsp;0.</p>
<p class="tsk"><font face="Arial">Demo46*</font>. [Series17] Дано вещественное число&nbsp;B, целое число&nbsp;N и&nbsp;набор из&nbsp;N&nbsp;вещественных чисел, упорядоченных по&nbsp;возрастанию. Вывести элементы набора вместе с&nbsp;числом&nbsp;B, сохраняя упорядоченность выводимых чисел.</p>
<p class="tsk"><font face="Arial">Demo47*</font>. [Series19] Дано целое число&nbsp;N (&gt;&nbsp;1) и&nbsp;набор из&nbsp;N&nbsp;целых чисел. Вывести те&nbsp;элементы в&nbsp;наборе, которые меньше своего левого соседа, и&nbsp;количество&nbsp;K таких элементов.</p>
<p class="tsk"><font face="Arial">Demo48*</font>. [Series21] Дано целое число&nbsp;N (&gt;&nbsp;1) и&nbsp;набор из&nbsp;N&nbsp;вещественных чисел. Проверить, образует&nbsp;ли данный набор возрастающую последовательность. Если образует, то&nbsp;вывести True, если нет&nbsp;&#151; вывести False.</p>
<p class="tsk"><font face="Arial">Demo49*</font>. [Proc4] Описать процедуру TrianglePS(a, P,&nbsp;S), вычисляющую по стороне&nbsp;a равностороннего треугольника его периметр&nbsp;P&nbsp;=&nbsp;3<font face="Courier">*</font>a и&nbsp;площадь&nbsp;S&nbsp;=&nbsp;a^2<font face="Courier">*</font>(3)<sup><small>1/2</small></sup>/4 (a&nbsp;&#151; входной, P и&nbsp;S&nbsp;&#151; выходные параметры; все параметры являются вещественными). С&nbsp;помощью этой процедуры найти периметры и&nbsp;площади  трех равносторонних треугольников с&nbsp;данными сторонами.</p>
<p class="tsk"><font face="Arial">Demo50*</font>. [Proc8] Описать процедуру AddRightDigit(D, K), добавляющую к&nbsp;целому положительному числу&nbsp;K справа цифру&nbsp;D (D&nbsp;&#151; входной параметр целого типа, лежащий в&nbsp;диапазоне&nbsp;0&#150;9, K&nbsp;&#151; параметр целого типа, являющийся одновременно входным и&nbsp;выходным). С&nbsp;помощью этой процедуры последовательно добавить к&nbsp;данному числу&nbsp;K справа данные цифры&nbsp;D1 и D2, выводя результат каждого добавления.</p>
<p class="tsk"><font face="Arial">Demo51*</font>. [Proc21] Описать функцию SumRange(A, B) целого типа, находящую сумму всех целых чисел от&nbsp;A до&nbsp;B включительно (A&nbsp;и&nbsp;B&nbsp;&#151; целые). Если A&nbsp;&gt;&nbsp;B, то&nbsp;функция возвращает&nbsp;0. С&nbsp;помощью этой функции найти суммы чисел от&nbsp;A до&nbsp;B и&nbsp;от&nbsp;B до&nbsp;C, если даны числа&nbsp;A, B,&nbsp;C.</p>
<p class="tsk"><font face="Arial">Demo52*</font>. [Minmax1] Дано целое число&nbsp;N и&nbsp;набор из&nbsp;N&nbsp;чисел. Найти минимальный и&nbsp;максимальный из&nbsp;элементов данного набора и&nbsp;вывести&nbsp;их в&nbsp;указанном порядке.</p>
<p class="tsk"><font face="Arial">Demo53*</font>. [Minmax26] Дано целое число&nbsp;N и&nbsp;набор из&nbsp;N&nbsp;целых чисел. Найти максимальное количество четных чисел в&nbsp;наборе, идущих подряд. Если четные числа в&nbsp;наборе отсутствуют, то&nbsp;вывести&nbsp;0.</p>
<p class="cmt"><h2>Массивы, строки, файлы</h2></p>
<p class="tsk"><font face="Arial">Demo54*</font>. [Array7] Дан массив размера&nbsp;N. Вывести его&nbsp;элементы в&nbsp;обратном порядке.</p>
<p class="tsk"><font face="Arial">Demo55*</font>. [Array47] Дан целочисленный массив размера&nbsp;N. Найти количество различных элементов в&nbsp;данном массиве.</p>
<p class="tsk"><font face="Arial">Demo56*</font>. [Array116] Дан целочисленный массив&nbsp;A размера&nbsp;N. Назовем серией группу подряд идущих одинаковых элементов, а&nbsp;длиной серии&nbsp;&#151; количество этих элементов (длина серии может быть равна&nbsp;1). Сформировать два новых целочисленных массива&nbsp;B и&nbsp;C одинакового размера, записав в&nbsp;массив&nbsp;B длины всех серий исходного массива, а&nbsp;в&nbsp;массив&nbsp;C&nbsp;&#151; значения элементов, образующих эти&nbsp;серии.</p>
<p class="tsk"><font face="Arial">Demo57*</font>. [Matrix7] Дана матрица размера&nbsp;M&nbsp;x&nbsp;N и&nbsp;целое число&nbsp;K (1&nbsp;&lt;=&nbsp;K&nbsp;&lt;=&nbsp;M). Вывести элементы K-й&nbsp;строки данной матрицы.</p>
<p class="tsk"><font face="Arial">Demo58*</font>. [Matrix82] Дана квадратная матрица&nbsp;A порядка&nbsp;M. Найти сумму элементов каждой ее&nbsp;диагонали, параллельной главной (начиная с&nbsp;одноэлементной диагонали&nbsp;A[1,M]).</p>
<p class="tsk"><font face="Arial">Demo59*</font>. [String9] Дано четное число&nbsp;N (&gt;&nbsp;0) и&nbsp;символы&nbsp;C1 и&nbsp;C2. Вывести строку длины&nbsp;N, которая состоит из&nbsp;чередующихся символов&nbsp;C1 и&nbsp;C2, начиная с&nbsp;C1.</p>
<p class="tsk"><font face="Arial">Demo60*</font>. [String41] Дана строка, состоящая из&nbsp;русских слов, разделенных пробелами (одним или&nbsp;несколькими). Найти количество слов в&nbsp;строке.</p>
<p class="tsk"><font face="Arial">Demo61*</font>. [File25] Дан файл вещественных чисел. Заменить в&nbsp;нем все&nbsp;элементы на&nbsp;их&nbsp;квадраты.</p>
<p class="tsk"><font face="Arial">Demo62*</font>. [File43] Дан файл произвольного типа. Создать его&nbsp;копию с&nbsp;новым именем.</p>
<p class="tsk"><font face="Arial">Demo63*</font>. [File48] Даны три файла целых чисел одинакового размера с&nbsp;именами&nbsp;SA, SB, SC и&nbsp;строка&nbsp;SD. Создать новый файл с&nbsp;именем&nbsp;SD, в&nbsp;котором чередовались&nbsp;бы элементы исходных файлов с&nbsp;одним и&nbsp;тем&nbsp;же номером:</p><center>A1, &nbsp; &nbsp;B1, &nbsp; &nbsp;C1, &nbsp; &nbsp;A2, &nbsp; &nbsp;B2, &nbsp; &nbsp;C2, &nbsp; &nbsp;&#133;&nbsp;.</center>
<p class="tsk"><font face="Arial">Demo64*</font>. [Text1] Дано имя файла и&nbsp;целые положительные числа&nbsp;N и&nbsp;K. Создать текстовый файл с&nbsp;указанным именем и&nbsp;записать в&nbsp;него N&nbsp;строк, каждая из&nbsp;которых состоит из&nbsp;K&nbsp;символов&nbsp;"*" (звездочка).</p>
<p class="tsk"><font face="Arial">Demo65*</font>. [Text4] Дан текстовый файл. Вывести количество содержащихся в&nbsp;нем символов и&nbsp;строк (маркеры концов строк&nbsp;EOLN и&nbsp;конца файла&nbsp;EOF при&nbsp;подсчете количества символов не&nbsp;учитывать).</p>
<p class="tsk"><font face="Arial">Demo66*</font>. [Text21] Дан текстовый файл, содержащий более трех строк. Удалить из&nbsp;него последние три&nbsp;строки.</p>
<p class="tsk"><font face="Arial">Demo67*</font>. [Param1] Описать функцию MinInt(A,&nbsp;N) целого типа, находящую минимальный элемент целочисленного массива&nbsp;A размера&nbsp;N. С&nbsp;помощью этой функции найти минимальные элементы массивов&nbsp;A, B,&nbsp;C размера&nbsp;NA, NB,&nbsp;NC соответственно.</p>
<p class="tsk"><font face="Arial">Demo68*</font>. [Param39] Описать функцию PosK(S0, S, K) целого типа, возвращающую номер позиции, начиная с&nbsp;которой в&nbsp;строке&nbsp;S содержится K-е&nbsp;вхождение подстроки&nbsp;S0 (K&nbsp;&gt;&nbsp;0). Если количество вхождений&nbsp;S0 в&nbsp;строке&nbsp;S меньше&nbsp;K, то&nbsp;функция возвращает&nbsp;0. Считать, что перекрывающихся вхождений подстрок&nbsp;S0 строка&nbsp;S не&nbsp;содержит. Вывести значения этой функции для&nbsp;пяти данных троек:&nbsp;S0, S и&nbsp;K.</p>
<p class="cmt"><h2>Рекурсия</h2></p>
<p class="tsk"><font face="Arial">Demo69*</font>. [Recur1] Описать рекурсивную функцию Fact(N) вещественного типа, вычисляющую значение факториала</p><center>N!&nbsp;=&nbsp;1<font face="Courier">*</font>2<font face="Courier">*</font>&#133;<font face="Courier">*</font>N</center><p class="hntc">(N&nbsp;&gt;&nbsp;0&nbsp;&#151; параметр целого типа). С&nbsp;помощью этой функции вычислить факториалы пяти данных чисел.</p>
<p class="tsk"><font face="Arial">Demo70*</font>. [Recur17] Вывести значение целочисленного выражения, заданного в&nbsp;виде строки&nbsp;S. Выражение определяется следующим образом: </p><center><table><tr><td align=left>&lt;выражение&gt; <td align=center>::= <td align=left>&lt;цифра&gt; |<tr><td align=left>&nbsp;<td align=center>&nbsp;<td align=left>(&lt;выражение&gt;&lt;знак&gt;&lt;выражение&gt;)<tr><td align=left>&lt;знак&gt;      <td align=center>::= <td align=left>+ | &#150; | *</table></center>
<p class="tsk"><font face="Arial">Demo71*</font>. [Recur18] Проверить правильность выражения, заданного в&nbsp;виде непустой строки&nbsp;S (выражение определяется по&nbsp;тем&nbsp;же правилам, что&nbsp;и&nbsp;в&nbsp;задании Demo70). Если выражение составлено правильно, то&nbsp;вывести True, иначе вывести False.</p>
<p class="tsk"><font face="Arial">Demo72*</font>. [Recur25] Дано дерево глубины&nbsp;N, каждая внутренняя вершина которого имеет K&nbsp;(&lt;&nbsp;10) непосредственных потомков (нумеруются от&nbsp;1 до&nbsp;K). Корень дерева имеет номер&nbsp;0. Записать в&nbsp;текстовый файл с&nbsp;данным именем все возможные пути, ведущие от&nbsp;корня к&nbsp;листьям. Перебирать пути, начиная с&nbsp;"самого левого" и&nbsp;заканчивая "самым правым" (при&nbsp;этом первыми заменять конечные элементы пути).</p>
<p class="cmt"><h2>Указатели и&nbsp;динамические структуры данных</h2></p>
<p class="tsk"><font face="Arial">Demo73*</font>. [Pointer2] Дан адрес&nbsp;P1 записи типа TNode. Эта&nbsp;запись связана полем Next со&nbsp;следующей записью того&nbsp;же типа, она, в&nbsp;свою очередь,&nbsp;&#151; со&nbsp;следующей, и&nbsp;так&nbsp;далее до&nbsp;записи, поле Next которой равно&nbsp;nil (таким образом, возникает цепочка связанных записей). Вывести значения полей Data для&nbsp;всех элементов цепочки, длину цепочки (то&nbsp;есть число ее&nbsp;элементов) и&nbsp;адрес ее&nbsp;последнего элемента.</p>
<p class="tsk"><font face="Arial">Demo74*</font>. [Pointer3] Дано число&nbsp;D и&nbsp;указатель&nbsp;P1 на&nbsp;вершину непустого стека. Добавить элемент со&nbsp;значением&nbsp;D в&nbsp;стек и&nbsp;вывести адрес&nbsp;P2 новой вершины стека.</p>
<p class="tsk"><font face="Arial">Demo75*</font>. [Pointer5] Дан указатель&nbsp;P1 на вершину непустого стека. Извлечь из&nbsp;стека первый (верхний) элемент и&nbsp;вывести его&nbsp;значение&nbsp;D, а&nbsp;также адрес&nbsp;P2 новой вершины стека. Если после извлечения элемента стек окажется пустым, то&nbsp;положить P2&nbsp;=&nbsp;nil. После извлечения элемента из&nbsp;стека освободить память, занимаемую этим элементом.</p>
<p class="tsk"><font face="Arial">Demo76*</font>. [Pointer8] Даны указатели&nbsp;P1 и&nbsp;P2 на&nbsp;вершины двух непустых стеков. Переместить все&nbsp;элементы из&nbsp;первого стека во&nbsp;второй (в&nbsp;результате элементы первого стека будут располагаться во&nbsp;втором стеке в&nbsp;порядке, обратном исходному) и&nbsp;вывести адрес новой вершины второго стека. Операции выделения и&nbsp;освобождения памяти не&nbsp;использовать.</p>
<p class="tsk"><font face="Arial">Demo77*</font>. [Pointer11] Дан указатель&nbsp;P1 на&nbsp;вершину стека (если стек пуст, то&nbsp;P1&nbsp;=&nbsp;nil). Также дано число&nbsp;N (&gt;&nbsp;0) и&nbsp;набор из&nbsp;N&nbsp;чисел. Описать тип TStack&nbsp;&#151; запись с&nbsp;одним полем Top типа PNode (поле указывает на&nbsp;вершину стека)&nbsp;&#151; и&nbsp;процедуру Push(S,&nbsp;D), которая добавляет в&nbsp;стек&nbsp;S новый элемент со&nbsp;значением&nbsp;D (S&nbsp;&#151; входной и&nbsp;выходной параметр типа TStack, D&nbsp;&#151; входной параметр целого типа). С&nbsp;помощью процедуры Push добавить в&nbsp;исходный стек данный набор чисел (последнее число будет вершиной стека) и&nbsp;вывести адрес новой вершины стека.</p>
<p class="tsk"><font face="Arial">Demo78*</font>. [Pointer30] Дан указатель P1 на&nbsp;начало непустой цепочки элементов-записей типа TNode, связанных между собой с&nbsp;помощью поля Next. Используя поле Prev записи TNode, преобразовать исходную (односвязную) цепочку в&nbsp;двусвязную, в&nbsp;которой каждый элемент связан не&nbsp;только с&nbsp;последующим элементом (с&nbsp;помощью поля Next), но&nbsp;и&nbsp;с&nbsp;предыдущим (с&nbsp;помощью поля Prev). Поле Prev первого элемента положить равным&nbsp;nil. Вывести указатель на&nbsp;последний элемент преобразованной цепочки.</p>
<p class="tsk"><font face="Arial">Demo79*</font>. [Pointer49] Дан указатель&nbsp;P1 на&nbsp;первый элемент непустого двусвязного списка. Перегруппировать его&nbsp;элементы, переместив все&nbsp;элементы с&nbsp;нечетными номерами в&nbsp;конец списка (в&nbsp;том&nbsp;же порядке) и&nbsp;вывести указатель на&nbsp;первый элемент преобразованного списка. Операции выделения и&nbsp;освобождения памяти не&nbsp;использовать, поля Data не&nbsp;изменять.</p>
<p class="tsk"><font face="Arial">Demo80*</font>. [Pointer55] Дан указатель&nbsp;P1 на&nbsp;первый элемент непустого двусвязного списка. Преобразовать список в&nbsp;циклический, связав его&nbsp;последний элемент с&nbsp;помощью поля Next с&nbsp;первым, а&nbsp;первый элемент с&nbsp;помощью поля Prev&nbsp;&#151; с&nbsp;последним, и&nbsp;вывести указатель на&nbsp;элемент, который был последним элементом исходного списка.</p>
<hr noshade><div align=right><font size=-1>Дата генерации страницы: 22.03.2005.</font></div></body></html>
