<!-- Programming Taskbook 4.4 | Copyright (c) M. Abramyan, 1998-2005 -->
<html><head><meta http-equiv="pragma" content="no-cache"><meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<title>Programming Taskbook 4.4 | Составные типы данных в процедурах и функциях</title>
</head><body vlink="#003366" link="#003366"><style>
H1{font-family:"Arial";font-size:20pt;text-indent:0;margin-top:10; margin-right:10; margin-bottom:0; margin-left:10;}
H2{font-family:"Arial";font-size:16pt;text-indent:0;margin: 20 10 0 10;}
H3{font-family:"Arial";font-size:12pt;text-indent:0;margin: 20 10 0 10;}
P{font-family:"Times New Roman";font-size:12pt;text-indent:0;margin-top:0; margin-right:10; margin-bottom:0; margin-left:10;}
center{font-family:"Times New Roman";font-size:12pt;}
TABLE{margin-top:0; margin-bottom:0;}
TD{font-family:"Times New Roman";font-size:12pt;}
LI{font-family:"Times New Roman";font-size:12pt;}
UL{font-family:"Times New Roman";font-size:12pt;}
P.tsk{text-align:left;text-indent:-50;margin-top:5; margin-left:60;}
P.hnt{text-align:left;margin-left:60;}
P.hntc{text-align:left;margin-left:60;}
P.hntq{text-align:left;margin-left: 60;}
P.cmt{text-align:left;margin-top:5;}
P.ttt{text-align:left;}
P.cnt{text-align:center;}
P.qte{text-align:left;margin-left:120;margin-top:0;margin-bottom:0;}
blockquote{font-family:"Times New Roman";text-align:left;margin-left:100;margin-top:0; margin-bottom:0;}
P.cmtc{text-align:left;}
P.cmtq{text-align:left;}
SUB{font-family:"Times New Roman";font-size:8pt;}
SUP{font-family:"Times New Roman";font-size:8pt;}
P.foot{text-align:right;font-size:8pt;margin-right:0;}
</style>
<script language="javascript" src="back.js">
</script>
<font face="Arial" size=+3><b>Programming Taskbook 4</b><br></font>
<font face="Arial" size=+1>Электронный задачник по программированию</font>
<div align=right><font size = -1>&copy;&nbsp;&nbsp;М.&nbsp;Э.&nbsp;Абрамян,&nbsp;1998&#150;2005</font></div>
<hr noshade>
<div align=center><font size=-1>
[<a href="indexw.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/indexw.htm">Общее&nbsp;описание</a>] [<a href="remarksw.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/remarksw.htm">Предварительные&nbsp;замечания</a>] [<a href="beginw.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/beginw.htm">Ввод&nbsp;и&nbsp;вывод&nbsp;данных,&nbsp;оператор&nbsp;присваивания</a>] [<a href="integerw.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/integerw.htm">Целые&nbsp;числа</a>] [<a href="booleanw.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/booleanw.htm">Логические&nbsp;выражения</a>] [<a href="ifw.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/ifw.htm">Условный&nbsp;оператор</a>] [<a href="casew.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/casew.htm">Оператор&nbsp;выбора</a>] [<a href="forw.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/forw.htm">Цикл&nbsp;с&nbsp;параметром</a>] [<a href="whilew.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/whilew.htm">Цикл&nbsp;с&nbsp;условием</a>] [<a href="seriesw.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/seriesw.htm">Последовательности</a>] [<a href="procw.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/procw.htm">Процедуры&nbsp;и&nbsp;функции</a>] [<a href="minmaxw.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/minmaxw.htm">Минимумы&nbsp;и&nbsp;максимумы</a>] [<a href="arrayw.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/arrayw.htm">Одномерные&nbsp;массивы</a>] [<a href="matrixw.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/matrixw.htm">Двумерные&nbsp;массивы&nbsp;(матрицы)</a>] [<a href="stringw.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/stringw.htm">Символы&nbsp;и&nbsp;строки</a>] [<a href="filew.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/filew.htm">Двоичные&nbsp;(типизированные)&nbsp;файлы</a>] [<a href="textw.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/textw.htm">Текстовые&nbsp;файлы</a>] [<b>Составные&nbsp;типы&nbsp;данных&nbsp;в&nbsp;процедурах&nbsp;и&nbsp;функциях</b>] [<a href="recurw.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/recurw.htm">Рекурсия</a>] [<a href="pointerw.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/pointerw.htm">Указатели&nbsp;и&nbsp;динамические&nbsp;структуры&nbsp;данных</a>] [<a href="demow.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/demow.htm">Задания&nbsp;демо-версии</a>]
</font></div><hr noshade><div align=right><font size=-1>Стиль: [<a href="paramd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/paramd.htm">DOS-программа</a>] [<b>Windows-программа</b>] [<a href="param.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/param.htm">Книга</a>]</font></div>

<p class="cmt"><h1>Составные типы данных в&nbsp;процедурах&nbsp;и&nbsp;функциях</h1></p>
<p class="cmt">В&nbsp;каждом задании данного раздела требуется описать процедуру или&nbsp;функцию и&nbsp;затем использовать ее&nbsp;для обработки исходных данных. Все&nbsp;параметры любой <b>функции</b> считаются входными. Для&nbsp;<b>процедур</b> всегда указывается, какие параметры являются выходными (или&nbsp;одновременно входными и&nbsp;выходными); если о&nbsp;виде параметра процедуры ничего не&nbsp;сказано, то&nbsp;он&nbsp;считается входным.</p>
<p class="cmt"><h2>Одномерные и&nbsp;двумерные массивы</h2></p>
<p class="cmt">При вводе исходного массива вначале следует ввести его&nbsp;размер (одно число для&nbsp;одномерных массивов, два числа&nbsp;&#151; количество строк и&nbsp;столбцов&nbsp;&#151; для&nbsp;двумерных массивов-матриц), а&nbsp;затем&nbsp;&#151; все его&nbsp;элементы.</p>
<p class="cmt">Если в&nbsp;задании явно не&nbsp;указывается размер одномерного массива, являющегося параметром процедуры или&nbsp;функции, то&nbsp;предполагается, что&nbsp;этот размер может изменяться в&nbsp;пределах от&nbsp;1 до&nbsp;10. Для&nbsp;двумерных массивов-матриц предполагается, что число их&nbsp;строк и&nbsp;столбцов может менятся от&nbsp;1 до&nbsp;10. Индексы начальных элементов как&nbsp;одномерных, так&nbsp;и&nbsp;двумерных массивов всегда считаются равными&nbsp;1.</p>
<p class="cmt">При описании процедур, выполняющих преобразование массива, не&nbsp;следует использовать вспомогательный массив того&nbsp;же размера.</p>
<p class="tsk"><font face="Arial">Param1*</font>. Описать функцию MinInt(A,&nbsp;N) целого типа, находящую минимальный элемент целочисленного массива&nbsp;A размера&nbsp;N. С&nbsp;помощью этой функции найти минимальные элементы массивов&nbsp;A, B,&nbsp;C размера&nbsp;N<sub>A</sub>, N<sub>B</sub>,&nbsp;N<sub>C</sub> соответственно.</p>
<p class="tsk"><font face="Arial">Param2</font>. Описать функцию NMax(A,&nbsp;N) целого типа, находящую номер максимального элемента вещественного массива&nbsp;A размера&nbsp;N. С&nbsp;помощью этой функции найти номера максимальных элементов массивов&nbsp;A, B,&nbsp;C размера&nbsp;N<sub>A</sub>, N<sub>B</sub>,&nbsp;N<sub>C</sub> соответственно.</p>
<p class="tsk"><font face="Arial">Param3</font>. Описать процедуру NMinmax(A,&nbsp;N,&nbsp;NMin,&nbsp;NMax), находящую номера минимального и&nbsp;максимального элемента вещественного массива&nbsp;A размера&nbsp;N. Выходные параметры целого типа: NMin (номер минимального элемента) и&nbsp;NMax (номер максимального элемента). С&nbsp;помощью этой процедуры найти номера минимальных и&nbsp;максимальных элементов массивов&nbsp;A, B,&nbsp;C размера&nbsp;N<sub>A</sub>, N<sub>B</sub>,&nbsp;N<sub>C</sub> соответственно.</p>
<p class="tsk"><font face="Arial">Param4</font>. Описать процедуру Invert(A,&nbsp;N), меняющую порядок следования элементов вещественного массива&nbsp;A размера&nbsp;N на&nbsp;противоположный (<b>инвертирование</b> массива). Массив&nbsp;A является входным и&nbsp;выходным параметром. С&nbsp;помощью этой процедуры инвертировать массивы&nbsp;A, B,&nbsp;C размера&nbsp;N<sub>A</sub>, N<sub>B</sub>,&nbsp;N<sub>C</sub> соответственно.</p>
<p class="tsk"><font face="Arial">Param5</font>. Описать процедуру Smooth1(A,&nbsp;N), выполняющую <b>сглаживание</b> вещественного массива&nbsp;A размера&nbsp;N следующим образом: элемент A<sub>K</sub> заменяется на&nbsp;среднее арифметическое первых&nbsp;K исходных элементов массива&nbsp;A. Массив&nbsp;A является входным и&nbsp;выходным параметром. С&nbsp;помощью этой процедуры выполнить пятикратное сглаживание данного массива&nbsp;A размера&nbsp;N, выводя результаты каждого сглаживания.</p>
<p class="tsk"><font face="Arial">Param6</font>. Описать процедуру Smooth2(A,&nbsp;N), выполняющую <b>сглаживание</b> вещественного массива&nbsp;A размера&nbsp;N следующим образом: элемент&nbsp;A<sub>1</sub> не&nbsp;изменяется, элемент&nbsp;A<sub>K</sub> (K&nbsp;=&nbsp;2,&nbsp;&#133;,&nbsp;N) заменяется на&nbsp;полусумму исходных элементов&nbsp;A<sub>K&#150;1</sub> и&nbsp;A<sub>K</sub>. Массив&nbsp;A является входным и&nbsp;выходным параметром. С&nbsp;помощью этой процедуры выполнить пятикратное сглаживание данного массива&nbsp;A размера&nbsp;N, выводя результаты каждого сглаживания.</p>
<p class="tsk"><font face="Arial">Param7</font>. Описать процедуру Smooth3(A,&nbsp;N), выполняющую <b>сглаживание</b> вещественного массива&nbsp;A размера&nbsp;N следующим образом: каждый элемент массива заменяется на его среднее арифметическое с соседними элементами (при вычислении среднего арифметического используются <b>исходные</b> значения соседних элементов). Массив&nbsp;A является входным и&nbsp;выходным параметром. С&nbsp;помощью этой процедуры выполнить пятикратное сглаживание данного массива&nbsp;A размера&nbsp;N, выводя результаты каждого сглаживания.</p>
<p class="tsk"><font face="Arial">Param8</font>. Описать процедуру RemoveX(A,&nbsp;N,&nbsp;X), удаляющую из&nbsp;целочисленного массива&nbsp;A размера&nbsp;N элементы, равные целому числу&nbsp;X. Массив&nbsp;A и&nbsp;число&nbsp;N являются входными и&nbsp;выходными параметрами. С&nbsp;помощью этой процедуры удалить числа&nbsp;X<sub>A</sub>, X<sub>B</sub>,&nbsp;X<sub>C</sub> из&nbsp;массивов&nbsp;A, B,&nbsp;C размера&nbsp;N<sub>A</sub>, N<sub>B</sub>,&nbsp;N<sub>C</sub> соответственно и&nbsp;вывести размер и&nbsp;содержимое полученных массивов.</p>
<p class="tsk"><font face="Arial">Param9</font>. Описать процедуру RemoveForInc(A,&nbsp;N), удаляющую из&nbsp;вещественного массива&nbsp;A размера&nbsp;N &#171;лишние&#187; элементы так, чтобы оставшиеся элементы оказались упорядоченными по&nbsp;возрастанию: первый элемент не&nbsp;удаляется, второй элемент удаляется, если он&nbsp;меньше первого, третий&nbsp;&#151; если он&nbsp;меньше предыдущего элемента, оставленного в&nbsp;массиве, и&nbsp;т.&nbsp;д. Например, массив&nbsp;5.5, 2.5, 4.6, 7.2, 5.8,&nbsp;9.4 должен быть преобразован к&nbsp;виду&nbsp;5.5, 7.2,&nbsp;9.4. Массив&nbsp;A и&nbsp;число&nbsp;N являются входными и&nbsp;выходными параметрами. С&nbsp;помощью этой процедуры преобразовать массивы&nbsp;A, B,&nbsp;C размера&nbsp;N<sub>A</sub>, N<sub>B</sub>,&nbsp;N<sub>C</sub> соответственно и&nbsp;вывести размер и&nbsp;содержимое полученных массивов.</p>
<p class="tsk"><font face="Arial">Param10</font>. Описать процедуру DoubleX(A,&nbsp;N,&nbsp;X), дублирующую в&nbsp;целочисленном массиве&nbsp;A размера&nbsp;N элементы, равные целому числу&nbsp;X. Массив&nbsp;A и&nbsp;число&nbsp;N являются входными и&nbsp;выходными параметрами. С&nbsp;помощью этой процедуры продублировать числа&nbsp;X<sub>A</sub>, X<sub>B</sub>,&nbsp;X<sub>C</sub> в&nbsp;массивах&nbsp;A, B,&nbsp;C размера&nbsp;N<sub>A</sub>, N<sub>B</sub>,&nbsp;N<sub>C</sub> соответственно и&nbsp;вывести размер и&nbsp;содержимое полученных массивов.</p>
<p class="tsk"><font face="Arial">Param11</font>. Описать процедуру Sort(A,&nbsp;N), выполняющую сортировку по&nbsp;возрастанию вещественного массива&nbsp;A размера&nbsp;N. Массив&nbsp;A является входным и&nbsp;выходным параметром. С&nbsp;помощью этой процедуры отсортировать массивы&nbsp;A, B,&nbsp;C размера&nbsp;N<sub>A</sub>, N<sub>B</sub>,&nbsp;N<sub>C</sub> соответственно.</p>
<p class="tsk"><font face="Arial">Param12</font>. Описать процедуру SortIndex(A,&nbsp;N,&nbsp;I), формирующую для&nbsp;вещественного массива&nbsp;A размера&nbsp;N <b>индексный массив</b>&nbsp;I&nbsp;&#151; массив целых чисел того&nbsp;же размера, содержащий номера элементов массива&nbsp;A в&nbsp;том порядке, который соответствует возрастанию элементов массива&nbsp;A (сам&nbsp;массив&nbsp;A при&nbsp;этом не&nbsp;изменяется). Индексный массив&nbsp;I является выходным параметром. С&nbsp;помощью этой процедуры создать индексные массивы для&nbsp;массивов&nbsp;A, B,&nbsp;C размера&nbsp;N<sub>A</sub>, N<sub>B</sub>,&nbsp;N<sub>C</sub> соответственно.</p>
<p class="tsk"><font face="Arial">Param13</font>. Описать процедуру Bell(A,&nbsp;N), меняющую порядок элементов вещественного массива&nbsp;A размера&nbsp;N на следующий: наименьший элемент массива располагается на&nbsp;первом месте, наименьший из&nbsp;оставшихся элементов&nbsp;&#151; на&nbsp;последнем, следующий по&nbsp;величине располагается на&nbsp;втором месте, следующий&nbsp;&#151; на предпоследнем и&nbsp;т.&nbsp;д. (в&nbsp;результате график значений элементов будет напоминать <b>колокол</b>). Массив&nbsp;A является входным и&nbsp;выходным параметром. С&nbsp;помощью этой процедуры преобразовать массивы&nbsp;A, B,&nbsp;C размера&nbsp;N<sub>A</sub>, N<sub>B</sub>,&nbsp;N<sub>C</sub> соответственно.</p>
<p class="tsk"><font face="Arial">Param14</font>. Описать процедуру Split1(A,&nbsp;N<sub>A</sub>,&nbsp;B,&nbsp;N<sub>B</sub>,&nbsp;C,&nbsp;N<sub>C</sub>), формирующую по&nbsp;вещественному массиву&nbsp;A размера&nbsp;N<sub>A</sub> два вещественных массива&nbsp;B и&nbsp;C размера&nbsp;N<sub>B</sub> и&nbsp;N<sub>C</sub> соответственно; при&nbsp;этом массив&nbsp;B содержит все&nbsp;элементы массива&nbsp;A с&nbsp;нечетными порядковыми номерами (1, 3,&nbsp;&#133;), а&nbsp;массив&nbsp;C&nbsp;&#151; все&nbsp;элементы массива&nbsp;A с&nbsp;четными номерами (2, 4,&nbsp;&#133;). Массивы&nbsp;B и&nbsp;C и&nbsp;числа&nbsp;N<sub>B</sub> и&nbsp;N<sub>C</sub> являются выходными параметрами. Применить эту&nbsp;процедуру к&nbsp;данному массиву&nbsp;A размера&nbsp;N<sub>A</sub> и&nbsp;вывести размер и&nbsp;содержимое полученных массивов&nbsp;B и&nbsp;C.</p>
<p class="tsk"><font face="Arial">Param15</font>. Описать процедуру Split2(A,&nbsp;N<sub>A</sub>,&nbsp;B,&nbsp;N<sub>B</sub>,&nbsp;C,&nbsp;N<sub>C</sub>), формирующую по&nbsp;целочисленному массиву&nbsp;A размера&nbsp;N<sub>A</sub> два целочисленных массива&nbsp;B и&nbsp;C размера&nbsp;N<sub>B</sub> и&nbsp;N<sub>C</sub> соответственно; при&nbsp;этом массив&nbsp;B содержит все&nbsp;четные числа из массива&nbsp;A, а&nbsp;массив&nbsp;C&nbsp;&#151; все&nbsp;нечетные числа (в том же порядке). Массивы&nbsp;B и&nbsp;C и&nbsp;числа&nbsp;N<sub>B</sub> и&nbsp;N<sub>C</sub> являются выходными параметрами. Применить эту&nbsp;процедуру к&nbsp;данному массиву&nbsp;A размера&nbsp;N<sub>A</sub> и&nbsp;вывести размер и&nbsp;содержимое полученных массивов&nbsp;B и&nbsp;C.</p>
<p class="tsk"><font face="Arial">Param16</font>. Описать процедуру ArrayToMatrix1(A,&nbsp;K,&nbsp;M,&nbsp;N,&nbsp;B), формирующую по&nbsp;вещественному массиву&nbsp;A размера&nbsp;K матрицу&nbsp;B размера M&nbsp;<font face="Symbol">ґ</font>&nbsp;N (матрица заполняется элементами массива&nbsp;A по&nbsp;строкам). &#171;Лишние&#187; элементы массива игнорируются; если элементов массива недостаточно, то&nbsp;оставшиеся элементы матрицы полагаются равными&nbsp;0. Двумерный массив&nbsp;B является выходным параметром. С&nbsp;помощью этой процедуры на&nbsp;основе данного массива&nbsp;A размера&nbsp;K и&nbsp;целых чисел&nbsp;M и&nbsp;N сформировать матрицу&nbsp;B размера M&nbsp;<font face="Symbol">ґ</font>&nbsp;N.</p>
<p class="tsk"><font face="Arial">Param17</font>. Описать процедуру ArrayToMatrix2(A,&nbsp;K,&nbsp;M,&nbsp;N,&nbsp;B), формирующую по&nbsp;вещественному массиву&nbsp;A размера&nbsp;K матрицу&nbsp;B размера M&nbsp;<font face="Symbol">ґ</font>&nbsp;N (матрица заполняется элементами массива&nbsp;A по&nbsp;столбцам). &#171;Лишние&#187; элементы массива игнорируются; если элементов массива недостаточно, то&nbsp;оставшиеся элементы матрицы полагаются равными&nbsp;0. Двумерный массив&nbsp;B является выходным параметром. С&nbsp;помощью этой процедуры на&nbsp;основе данного массива&nbsp;A размера&nbsp;K и&nbsp;целых чисел&nbsp;M и&nbsp;N сформировать матрицу&nbsp;B размера M&nbsp;<font face="Symbol">ґ</font>&nbsp;N.</p>
<p class="tsk"><font face="Arial">Param18</font>. Описать процедуру Chessboard(M,&nbsp;N,&nbsp;A), формирующую по&nbsp;целым положительным числам&nbsp;M и&nbsp;N матрицу&nbsp;A размера M&nbsp;<font face="Symbol">ґ</font>&nbsp;N, которая содержит числа&nbsp;0 и&nbsp;1, расположенные в&nbsp;&#171;шахматном&#187; порядке, причем A<sub>1,1</sub>&nbsp;=&nbsp;0. Двумерный целочисленный массив&nbsp;A является выходным параметром. С&nbsp;помощью этой процедуры по&nbsp;данным целым числам&nbsp;M и&nbsp;N сформировать матрицу&nbsp;A размера M&nbsp;<font face="Symbol">ґ</font>&nbsp;N.</p>
<p class="tsk"><font face="Arial">Param19</font>. Описать функцию Norm1(A,&nbsp;M,&nbsp;N) вещественного типа, вычисляющую <b>норму</b> вещественной матрицы&nbsp;A размера M&nbsp;<font face="Symbol">ґ</font>&nbsp;N: </p><center>Norm1(A,&nbsp;M,&nbsp;N)&nbsp;=&nbsp;max {|A<sub>1,J</sub>|&nbsp;+&nbsp;|A<sub>2,J</sub>|&nbsp;+&nbsp;&#133;&nbsp;+&nbsp;|A<sub>M,J</sub>|},</center><p class="hntc">где максимум берется по&nbsp;всем&nbsp;J от&nbsp;1 до&nbsp;N. Для&nbsp;данной матрицы&nbsp;A размера M&nbsp;<font face="Symbol">ґ</font>&nbsp;N найти Norm1(A,&nbsp;K,&nbsp;N), K&nbsp;=&nbsp;1,&nbsp;&#133;,&nbsp;M.</p>
<p class="tsk"><font face="Arial">Param20</font>. Описать функцию Norm2(A,&nbsp;M,&nbsp;N) вещественного типа, вычисляющую <b>норму</b> вещественной матрицы&nbsp;A размера M&nbsp;<font face="Symbol">ґ</font>&nbsp;N: </p><center>Norm2(A,&nbsp;M,&nbsp;N)&nbsp;=&nbsp;max {|A<sub>I,1</sub>|&nbsp;+&nbsp;|A<sub>I,2</sub>|&nbsp;+&nbsp;&#133;&nbsp;+&nbsp;|A<sub>I,N</sub>|},</center><p class="hntc">где максимум берется по&nbsp;всем&nbsp;I от&nbsp;1 до&nbsp;M. Для&nbsp;данной матрицы&nbsp;A размера M&nbsp;<font face="Symbol">ґ</font>&nbsp;N найти Norm2(A,&nbsp;K,&nbsp;N), K&nbsp;=&nbsp;1,&nbsp;&#133;,&nbsp;M.</p>
<p class="tsk"><font face="Arial">Param21</font>. Описать функцию SumRow(A, M, N, K) вещественного типа, вычисляющую сумму элементов вещественной матрицы&nbsp;A размера&nbsp;M&nbsp;<font face="Symbol">ґ</font>&nbsp;N, расположенных в&nbsp;K-й&nbsp;строке (если K&nbsp;&gt;&nbsp;M, то&nbsp;функция возвращает&nbsp;0). Для&nbsp;данной матрицы&nbsp;A размера&nbsp;M&nbsp;<font face="Symbol">ґ</font>&nbsp;N и&nbsp;трех данных&nbsp;K найти SumRow(A,&nbsp;M,&nbsp;N,&nbsp;K).</p>
<p class="tsk"><font face="Arial">Param22</font>. Описать функцию SumCol(A, M, N, K) вещественного типа, вычисляющую сумму элементов вещественной матрицы&nbsp;A размера&nbsp;M&nbsp;<font face="Symbol">ґ</font>&nbsp;N, расположенных в&nbsp;K-м&nbsp;столбце (если K&nbsp;&gt;&nbsp;N, то&nbsp;функция возвращает&nbsp;0). Для&nbsp;данной матрицы&nbsp;A размера&nbsp;M&nbsp;<font face="Symbol">ґ</font>&nbsp;N и&nbsp;трех данных&nbsp;K найти SumCol(A,&nbsp;M,&nbsp;N,&nbsp;K).</p>
<p class="tsk"><font face="Arial">Param23</font>. Описать процедуру SwapRow(A, M, N, K<sub>1</sub>, K<sub>2</sub>), осуществляющую перемену местами строк вещественной матрицы&nbsp;A размера&nbsp;M&nbsp;<font face="Symbol">ґ</font>&nbsp;N с&nbsp;номерами&nbsp;K<sub>1</sub> и&nbsp;K<sub>2</sub>. Матрица&nbsp;A является входным и выходным параметром; если&nbsp;K<sub>1</sub> или&nbsp;K<sub>2</sub> больше&nbsp;M, то&nbsp;матрица не&nbsp;изменяется. Используя эту&nbsp;процедуру, поменять для&nbsp;данной матрицы&nbsp;A размера&nbsp;M&nbsp;<font face="Symbol">ґ</font>&nbsp;N строки с&nbsp;данными номерами&nbsp;K<sub>1</sub> и&nbsp;K<sub>2</sub>.</p>
<p class="tsk"><font face="Arial">Param24</font>. Описать процедуру SwapCol(A, M, N, K<sub>1</sub>, K<sub>2</sub>), осуществляющую перемену местами столбцов вещественной матрицы&nbsp;A размера&nbsp;M&nbsp;<font face="Symbol">ґ</font>&nbsp;N с&nbsp;номерами&nbsp;K<sub>1</sub> и&nbsp;K<sub>2</sub>. Матрица&nbsp;A является входным и выходным параметром; если&nbsp;K<sub>1</sub> или&nbsp;K<sub>2</sub> больше&nbsp;N, то&nbsp;матрица не&nbsp;изменяется. Используя эту&nbsp;процедуру, поменять для&nbsp;данной матрицы&nbsp;A размера&nbsp;M&nbsp;<font face="Symbol">ґ</font>&nbsp;N столбцы с&nbsp;данными номерами&nbsp;K<sub>1</sub> и&nbsp;K<sub>2</sub>.</p>
<p class="tsk"><font face="Arial">Param25</font>. Описать процедуру Transp(A, M), выполняющую <b>транспонирование</b> (то&nbsp;есть зеркальное отражение относительно главной диагонали) квадратной вещественной матрицы&nbsp;A порядка&nbsp;M. Матрица&nbsp;A является входным и&nbsp;выходным параметром. Используя эту&nbsp;процедуру, транспонировать данную матрицу&nbsp;A порядка&nbsp;M.</p>
<p class="tsk"><font face="Arial">Param26</font>. Описать процедуру RemoveRows(A,&nbsp;M,&nbsp;N,&nbsp;K<sub>1</sub>,&nbsp;K<sub>2</sub>), удаляющую из&nbsp;вещественной матрицы&nbsp;A размера M&nbsp;<font face="Symbol">ґ</font>&nbsp;N строки с&nbsp;номерами от&nbsp;K<sub>1</sub> до&nbsp;K<sub>2</sub> включительно (предполагается, что 1&nbsp;&lt;&nbsp;K<sub>1</sub>&nbsp;<font face="Symbol">Ј</font>&nbsp;K<sub>2</sub>). Если K<sub>1</sub>&nbsp;&gt;&nbsp;M, то&nbsp;матрица не&nbsp;изменяется; если K<sub>2</sub>&nbsp;&gt;&nbsp;M, то&nbsp;удаляются строки матрицы с&nbsp;номерами от&nbsp;K<sub>1</sub> до&nbsp;M. Двумерный массив&nbsp;A и&nbsp;числа&nbsp;M, N являются входными и выходными параметрами. Используя процедуру RemoveRows, удалить из&nbsp;данной матрицы&nbsp;A размера&nbsp;M&nbsp;<font face="Symbol">ґ</font>&nbsp;N строки с&nbsp;номерами от&nbsp;K<sub>1</sub> до&nbsp;K<sub>2</sub> и&nbsp;вывести размер полученной матрицы и&nbsp;ее&nbsp;элементы.</p>
<p class="tsk"><font face="Arial">Param27</font>. Описать процедуру RemoveCols(A,&nbsp;M,&nbsp;N,&nbsp;K<sub>1</sub>,&nbsp;K<sub>2</sub>), удаляющую из&nbsp;вещественной матрицы&nbsp;A размера M&nbsp;<font face="Symbol">ґ</font>&nbsp;N столбцы с&nbsp;номерами от&nbsp;K<sub>1</sub> до&nbsp;K<sub>2</sub> включительно (предполагается, что 1&nbsp;&lt;&nbsp;K<sub>1</sub>&nbsp;<font face="Symbol">Ј</font>&nbsp;K<sub>2</sub>). Если K<sub>1</sub>&nbsp;&gt;&nbsp;N, то&nbsp;матрица не&nbsp;изменяется; если K<sub>2</sub>&nbsp;&gt;&nbsp;N, то&nbsp;удаляются столбцы матрицы с&nbsp;номерами от&nbsp;K<sub>1</sub> до&nbsp;N. Двумерный массив&nbsp;A и&nbsp;числа&nbsp;M, N являются входными и выходными параметрами. Используя процедуру RemoveCols, удалить из&nbsp;данной матрицы&nbsp;A размера&nbsp;M&nbsp;<font face="Symbol">ґ</font>&nbsp;N столбцы с&nbsp;номерами от&nbsp;K<sub>1</sub> до&nbsp;K<sub>2</sub> и&nbsp;вывести размер полученной матрицы и&nbsp;ее&nbsp;элементы.</p>
<p class="tsk"><font face="Arial">Param28</font>. Описать процедуру RemoveRowCol(A,&nbsp;M,&nbsp;N,&nbsp;K,&nbsp;L), удаляющую из&nbsp;вещественной матрицы&nbsp;A размера M&nbsp;<font face="Symbol">ґ</font>&nbsp;N строку и&nbsp;столбец, которые содержат элемент&nbsp;A<sub>K,L</sub> (предполагается, что M&nbsp;&gt;&nbsp;1 и N&nbsp;&gt;&nbsp;1; если K&nbsp;&gt;&nbsp;M или&nbsp;L&nbsp;&gt;&nbsp;N, то&nbsp;матрица не&nbsp;изменяется). Двумерный массив&nbsp;A и&nbsp;числа&nbsp;M, N являются входными и&nbsp;выходными параметрами. Дана матрица&nbsp;A размера M&nbsp;<font face="Symbol">ґ</font>&nbsp;N и&nbsp;числа&nbsp;K, L. Применить к&nbsp;матрице&nbsp;A процедуру RemoveRowCol и&nbsp;вывести размер полученной матрицы и&nbsp;ее&nbsp;элементы.</p>
<p class="tsk"><font face="Arial">Param29</font>. Описать процедуру SortCols(A,&nbsp;M,&nbsp;N), выполняющую сортировку по&nbsp;возрастанию столбцов целочисленной матрицы&nbsp;A размера M&nbsp;<font face="Symbol">ґ</font>&nbsp;N (столбцы сравниваются <b>лексикографически</b>: если первые элементы столбцов различны, то&nbsp;меньшим считается столбец, содержащий меньший первый элемент; если первые элементы столбцов равны, то&nbsp;анализируются их&nbsp;вторые элементы и&nbsp;т.&nbsp;д.). Двумерный массив&nbsp;A является входным и&nbsp;выходным параметром. Используя процедуру SortCols, отсортировать столбцы данной матрицы&nbsp;A размера M&nbsp;<font face="Symbol">ґ</font>&nbsp;N.</p>
<p class="cmt"><h2>Строки</h2></p>
<p class="tsk"><font face="Arial">Param30</font>. Описать функцию IsIdent(S) целого типа, проверяющую, является&nbsp;ли строка&nbsp;S допустимым <b>идентификатором</b>, то&nbsp;есть непустой строкой, которая содержит только латинские буквы, цифры и&nbsp;символ подчеркивания&nbsp;&#171;_&#187; и&nbsp;не&nbsp;начинается с&nbsp;цифры. Если S&nbsp;является допустимым идентификатором, то функция возвращает&nbsp;0. Если S&nbsp;является пустой строкой, то&nbsp;возвращается&nbsp;&#150;1, если&nbsp;S начинается с&nbsp;цифры, то&nbsp;возвращается&nbsp;&#150;2. Если S&nbsp;содержит недопустимые символы, то&nbsp;возвращается номер первого недопустимого символа. Проверить с&nbsp;помощью функции IsIdent пять данных строк.</p>
<p class="tsk"><font face="Arial">Param31</font>. Описать функцию FillStr(S,&nbsp;N) строкового типа, возвращающую строку длины&nbsp;N, заполненную повторяющимися копиями строки-<b>шаблона</b>&nbsp;S (последняя копия строки-шаблона может входить в&nbsp;результирующую строку частично). Используя эту&nbsp;функцию, сформировать по&nbsp;данному числу&nbsp;N и&nbsp;пяти данным строкам-шаблонам пять результирующих строк длины&nbsp;N.</p>
<p class="tsk"><font face="Arial">Param32</font>. Описать процедуру UpCaseRus(S), преобразующую все строчные русские буквы строки&nbsp;S в&nbsp;прописные (остальные символы строки&nbsp;S не&nbsp;изменяются). Строка&nbsp;S является входным и&nbsp;выходным параметром. Используя процедуру UpCaseRus, преобразовать пять данных строк.</p>
<p class="tsk"><font face="Arial">Param33</font>. Описать процедуру LowCaseRus(S), преобразующую все прописные русские буквы строки&nbsp;S в&nbsp;строчные (остальные символы строки&nbsp;S не&nbsp;изменяются). Строка&nbsp;S является входным и&nbsp;выходным параметром. Используя процедуру LowCaseRus, преобразовать пять данных строк.</p>
<p class="tsk"><font face="Arial">Param34</font>. Описать процедуру TrimLeftC(S, C), удаляющую в&nbsp;строке&nbsp;S начальные символы, совпадающие с&nbsp;символом&nbsp;C. Строка&nbsp;S является входным и&nbsp;выходным параметром. Дан символ&nbsp;C и&nbsp;пять строк. Используя процедуру TrimLeftC, преобразовать данные строки.</p>
<p class="tsk"><font face="Arial">Param35</font>. Описать процедуру TrimRightC(S, C), удаляющую в&nbsp;строке&nbsp;S конечные символы, совпадающие с&nbsp;символом&nbsp;C. Строка&nbsp;S является входным и&nbsp;выходным параметром. Дан символ&nbsp;C и&nbsp;пять строк. Используя процедуру TrimRightC, преобразовать данные строки.</p>
<p class="tsk"><font face="Arial">Param36</font>. Описать функцию InvertStr(S,&nbsp;K,&nbsp;N) строкового типа, возвращающую <b>инвертированную подстроку</b> строки&nbsp;S, содержащую в&nbsp;обратном порядке N&nbsp;символов строки&nbsp;S, начиная с&nbsp;ee&nbsp;K-го символа. Если&nbsp;K превосходит длину строки&nbsp;S, то&nbsp;возвращается пустая строка; если длина строки меньше K&nbsp;+&nbsp;N, то&nbsp;инвертируются все&nbsp;символы строки, начиная с&nbsp;ee&nbsp;K-го символа. Вывести значения функции InvertStr для&nbsp;данной строки&nbsp;S и&nbsp;каждой из&nbsp;трех пар положительных целых чисел: (K<sub>1</sub>,&nbsp;N<sub>1</sub>), (K<sub>2</sub>,&nbsp;N<sub>2</sub>), (K<sub>3</sub>,&nbsp;N<sub>3</sub>).</p>
<p class="tsk"><font face="Arial">Param37</font>. Описать функцию PosSub(S<sub>0</sub>,&nbsp;S,&nbsp;K,&nbsp;N) целого типа, возвращающую номер позиции, начиная с&nbsp;которой в&nbsp;строке&nbsp;S содержится первое вхождение строки&nbsp;S<sub>0</sub>, причем анализируются только N&nbsp;символов строки&nbsp;S, начиная с&nbsp;ее&nbsp;K-го&nbsp;символа (таким образом, PosSub обеспечивает <b>поиск в&nbsp;подстроке</b>). Если K&nbsp;превосходит длину строки&nbsp;S, то&nbsp;возвращается&nbsp;0, если длина строки меньше K&nbsp;+&nbsp;N, то&nbsp;анализируются все&nbsp;символы строки, начиная с&nbsp;ее&nbsp;K-го символа. Если в&nbsp;требуемой подстроке строки&nbsp;S вхождения&nbsp;S<sub>0</sub> отсутствуют, то&nbsp;функция возвращает&nbsp;0. Вывести значения функции PosSub для&nbsp;данных строк&nbsp;S<sub>0</sub>, S и&nbsp;каждой из&nbsp;трех пар положительных целых чисел: (K<sub>1</sub>,&nbsp;N<sub>1</sub>), (K<sub>2</sub>,&nbsp;N<sub>2</sub>), (K<sub>3</sub>,&nbsp;N<sub>3</sub>).</p>
<p class="tsk"><font face="Arial">Param38</font>. Описать функцию PosLast(S<sub>0</sub>,&nbsp;S) целого типа, возвращающую номер позиции, начиная с&nbsp;которой в&nbsp;строке&nbsp;S содержится последнее вхождение подстроки&nbsp;S<sub>0</sub>. Считать, что перекрывающихся вхождений подстрок&nbsp;S<sub>0</sub> строка&nbsp;S не&nbsp;содержит. Если в&nbsp;строке&nbsp;S отсутствуют подстроки&nbsp;S<sub>0</sub>, то&nbsp;функция возвращает&nbsp;0. Вывести значения этой функции для&nbsp;пяти данных пар строк S<sub>0</sub> и&nbsp;S.</p>
<p class="tsk"><font face="Arial">Param39*</font>. Описать функцию PosK(S<sub>0</sub>, S, K) целого типа, возвращающую номер позиции, начиная с&nbsp;которой в&nbsp;строке&nbsp;S содержится K-е&nbsp;вхождение подстроки&nbsp;S<sub>0</sub> (K&nbsp;&gt;&nbsp;0). Если количество вхождений&nbsp;S<sub>0</sub> в&nbsp;строке&nbsp;S меньше&nbsp;K, то&nbsp;функция возвращает&nbsp;0. Считать, что перекрывающихся вхождений подстрок&nbsp;S<sub>0</sub> строка&nbsp;S не&nbsp;содержит. Вывести значения этой функции для&nbsp;пяти данных троек:&nbsp;S<sub>0</sub>, S и&nbsp;K.</p>
<p class="tsk"><font face="Arial">Param40</font>. Описать функцию WordK(S, K) строкового типа, возвращающую K-е&nbsp;слово строки&nbsp;S (<b>словом</b> считается набор символов, не&nbsp;содержащий пробелов и&nbsp;ограниченный пробелами или&nbsp;началом/концом строки). Если количество слов в&nbsp;строке меньше&nbsp;K, то&nbsp;функция возвращает пустую строку. Используя эту&nbsp;функцию, выделить из&nbsp;данной строки&nbsp;S слова с&nbsp;данными номерами&nbsp;K<sub>1</sub>, K<sub>2</sub>,&nbsp;K<sub>3</sub>.</p>
<p class="tsk"><font face="Arial">Param41</font>. Описать процедуру SplitStr(S, W, N), которая формирует по&nbsp;данной строке&nbsp;S массив&nbsp;W слов, входящих&nbsp;в&nbsp;S (массив&nbsp;W и&nbsp;его размер&nbsp;N являются выходными параметрами). <b>Словом</b> считается набор символов, не&nbsp;содержащий пробелов и&nbsp;ограниченный пробелами или&nbsp;началом/концом строки; предполагается, что&nbsp;строка&nbsp;S содержит не&nbsp;более 10&nbsp;слов. Используя функцию SplitStr, найти количество слов&nbsp;N, содержащихся в&nbsp;данной строке&nbsp;S, и&nbsp;сами эти&nbsp;слова.</p>
<p class="tsk"><font face="Arial">Param42</font>. Описать функцию CompressStr(S) строкового типа, выполняющую <b>сжатие</b> строки&nbsp;S по&nbsp;следующему правилу: каждая подстрока строки&nbsp;S, состоящая из&nbsp;более чем четырех одинаковых символов&nbsp;C, заменяется текстом вида &#171;С{K}&#187;, где&nbsp;K&nbsp;&#151; количество символов&nbsp;C (предполагается, что&nbsp;строка&nbsp;S не&nbsp;содержит фигурных скобок&nbsp;&#171;{&#187; и&nbsp;&#171;}&#187;). Например, для&nbsp;строки S&nbsp;=&nbsp;&#171;bbbccccce&#187; функция вернет строку &#171;bbbc{5}e&#187;. С&nbsp;помощью функции CompressStr сжать пять данных строк.</p>
<p class="tsk"><font face="Arial">Param43</font>. Описать функцию DecompressStr(S) строкового типа, восстанавливающую строку, сжатую процедурой CompressStr (см.&nbsp;задание Param42). Параметр&nbsp;S содержит сжатую строку; восстановленная строка является возвращаемым значением функции. С&nbsp;помощью функции DecompressStr восстановить пять данных сжатых строк.</p>
<p class="tsk"><font face="Arial">Param44</font>. Описать функцию DecToBin(N) строкового типа, возвращающую строковое представление целого неотрицательного числа&nbsp;N в&nbsp;двоичной системе счисления. Результирующая строка состоит из&nbsp;символов &#171;0&#187;&#150;&#171;1&#187; и&nbsp;не&nbsp;содержит ведущих нулей (за&nbsp;исключением представления числа&nbsp;0). Используя эту&nbsp;функцию, получить двоичные представления пяти данных чисел.</p>
<p class="tsk"><font face="Arial">Param45</font>. Описать функцию DecToHex(N) строкового типа, возвращающую строковое представление целого неотрицательного числа&nbsp;N в&nbsp;16-ричной системе счисления. Результирующая строка состоит из&nbsp;символов &#171;0&#187;&#150;&#171;9&#187;, &#171;A&#187;&#150;&#171;F&#187; и&nbsp;не&nbsp;содержит ведущих нулей (за&nbsp;исключением представления числа&nbsp;0). Используя эту&nbsp;функцию, получить 16-ричные представления пяти данных чисел.</p>
<p class="tsk"><font face="Arial">Param46</font>. Описать функцию BinToDec(S) целого типа, определяющую целое неотрицательное число по&nbsp;его&nbsp;строковому представлению&nbsp;S в&nbsp;двоичной системе счисления. Параметр&nbsp;S имеет строковый тип, состоит из&nbsp;символов &#171;0&#187;&#150;&#171;1&#187; и&nbsp;не&nbsp;содержит ведущих нулей (за&nbsp;исключением значения&nbsp;&#171;0&#187;). Используя эту&nbsp;функцию, вывести пять чисел, для&nbsp;которых даны их&nbsp;двоичные представления.</p>
<p class="tsk"><font face="Arial">Param47</font>. Описать функцию HexToDec(S) целого типа, определяющую целое неотрицательное число по&nbsp;его&nbsp;строковому представлению&nbsp;S в&nbsp;16-ричной системе счисления. Параметр&nbsp;S имеет строковый тип, состоит из&nbsp;символов &#171;0&#187;&#150;&#171;9&#187;, &#171;A&#187;&#150;&#171;F&#187; и&nbsp;не&nbsp;содержит ведущих нулей (за&nbsp;исключением значения&nbsp;&#171;0&#187;). Используя эту&nbsp;функцию, вывести пять чисел, для&nbsp;которых даны их&nbsp;16-ричные представления.</p>
<p class="cmt"><h2>Файлы</h2></p>
<p class="tsk"><font face="Arial">Param48</font>. Описать функцию IntFileSize(S) целого типа, возвращающую количество элементов в&nbsp;файле целых чисел с&nbsp;именем&nbsp;S. Если файл не&nbsp;существует, то&nbsp;функция возвращает&nbsp;&#150;1. С&nbsp;помощью этой функции найти количество элементов в&nbsp;трех файлах с&nbsp;данными именами.</p>
<p class="tsk"><font face="Arial">Param49</font>. Описать функцию LineCount(S) целого типа, возвращающую количество строк в&nbsp;текстовом файле с&nbsp;именем&nbsp;S. Если файл не&nbsp;существует, то&nbsp;функция возвращает&nbsp;&#150;1. С&nbsp;помощью этой функции найти количество строк в&nbsp;трех файлах с&nbsp;данными именами.</p>
<p class="tsk"><font face="Arial">Param50</font>. Описать процедуру InvertIntFile(S), меняющую порядок следования элементов файла целого типа с&nbsp;именем&nbsp;S на&nbsp;противоположный. Если файл не&nbsp;существует или&nbsp;содержит менее двух элементов, то&nbsp;процедура не&nbsp;выполняет никаких действий. Обработать с&nbsp;помощью этой процедуры три&nbsp;файла с&nbsp;данными именами.</p>
<p class="tsk"><font face="Arial">Param51</font>. Описать процедуру AddLineNumbers(S,&nbsp;N,&nbsp;K,&nbsp;L), добавляющую в&nbsp;начало каждой строки существующего текстового файла с&nbsp;именем&nbsp;S ее&nbsp;порядковый номер: первая строка получает номер&nbsp;N, вторая&nbsp;&#151; N&nbsp;+&nbsp;1 и&nbsp;т.&nbsp;д. Номер отображается в&nbsp;K&nbsp;позициях, выравнивается по&nbsp;правому краю и&nbsp;отделяется от&nbsp;последующего текста L&nbsp;пробелами (K&nbsp;&gt;&nbsp;0, L&nbsp;&gt;&nbsp;0). Если строка файла является пустой, то&nbsp;она также нумеруется, но&nbsp;пробелы после номера не&nbsp;добавляются. Применить эту&nbsp;процедуру к&nbsp;данному файлу, используя указанные значения&nbsp;N, K и&nbsp;L.</p>
<p class="tsk"><font face="Arial">Param52</font>. Описать процедуру RemoveLineNumbers(S), удаляющую из&nbsp;начала каждой строки существующего текстового файла с&nbsp;именем&nbsp;S ее&nbsp;порядковый номер, добавленный процедурой AddLineNumbers (см.&nbsp;задание Param51), а&nbsp;также пробелы, отделяющие номер от&nbsp;последующего текста. Если строки не&nbsp;содержат номеров, то&nbsp;процедура не&nbsp;выполняет никаких действий. Применить эту&nbsp;процедуру к&nbsp;файлу с&nbsp;данным именем.</p>
<p class="tsk"><font face="Arial">Param53</font>. Описать процедуру SplitIntFile(S<sub>0</sub>,&nbsp;K,&nbsp;S<sub>1</sub>,&nbsp;S<sub>2</sub>), копирующую первые&nbsp;K (<font face="Symbol">і</font>&nbsp;0) элементов существующего файла целых чисел с&nbsp;именем&nbsp;S<sub>0</sub> в&nbsp;новый файл целых чисел с&nbsp;именем&nbsp;S<sub>1</sub>, a&nbsp;остальные элементы&nbsp;&#151; в&nbsp;новый файл целых чисел с&nbsp;именем&nbsp;S<sub>2</sub>. Один из&nbsp;созданных файлов может остаться пустым. Применить эту&nbsp;процедуру к&nbsp;файлу с&nbsp;данным именем&nbsp;S<sub>0</sub>, используя указанные значения&nbsp;K, S<sub>1</sub> и&nbsp;S<sub>2</sub>.</p>
<p class="tsk"><font face="Arial">Param54</font>. Описать процедуру SplitText(S<sub>0</sub>,&nbsp;K,&nbsp;S<sub>1</sub>,&nbsp;S<sub>2</sub>), копирующую первые&nbsp;K (<font face="Symbol">і</font>&nbsp;0) строк существующего текстового файла с&nbsp;именем&nbsp;S<sub>0</sub> в&nbsp;новый текстовый файл с&nbsp;именем&nbsp;S<sub>1</sub>, a&nbsp;остальные строки&nbsp;&#151; в&nbsp;новый текстовый файл с&nbsp;именем&nbsp;S<sub>2</sub>. Один из&nbsp;созданных файлов может остаться пустым. Применить эту&nbsp;процедуру к&nbsp;файлу с&nbsp;данным именем&nbsp;S<sub>0</sub>, используя указанные значения&nbsp;K, S<sub>1</sub> и&nbsp;S<sub>2</sub>.</p>
<p class="tsk"><font face="Arial">Param55</font>. Описать процедуру StringFileToText(S), преобразующую двоичный строковый файл с&nbsp;именем&nbsp;S в&nbsp;текстовый файл с&nbsp;тем&nbsp;же именем. Используя эту&nbsp;процедуру, преобразовать два&nbsp;данных строковых файла с&nbsp;именами&nbsp;S<sub>1</sub> и&nbsp;S<sub>2</sub> в&nbsp;текстовые.</p>
<p class="tsk"><font face="Arial">Param56</font>. Описать процедуру TextToStringFile(S), преобразующую текстовый файл с&nbsp;именем&nbsp;S в&nbsp;двоичный строковый файл с&nbsp;тем&nbsp;же именем. Используя эту&nbsp;процедуру, преобразовать два&nbsp;данных текстовых файла с&nbsp;именами&nbsp;S<sub>1</sub> и&nbsp;S<sub>2</sub> в&nbsp;строковые.</p>
<p class="tsk"><font face="Arial">Param57</font>. Описать процедуру EncodeText(S,&nbsp;K), которая шифрует текстовый файл с&nbsp;именем&nbsp;S, выполняя циклическую замену каждой русской буквы на&nbsp;букву того же регистра, расположенную в&nbsp;алфавите на&nbsp;K-й&nbsp;позиции после шифруемой буквы (0&nbsp;&lt;&nbsp;K&nbsp;&lt;&nbsp;10). Например, при&nbsp;K&nbsp;=&nbsp;3 &#171;А&#187; перейдет в&nbsp;&#171;Г&#187;, &#171;я&#187;&nbsp;&#151; в&nbsp;&#171;в&#187;. Букву&nbsp;&#171;ё&#187; в&nbsp;алфавите не&nbsp;учитывать, считая, что за&nbsp;буквой&nbsp;&#171;е&#187; сразу идет&nbsp;&#171;ж&#187;. Символы, не&nbsp;являющиеся русскими буквами, при&nbsp;шифровании не&nbsp;изменять. Используя эту&nbsp;процедуру и&nbsp;зная кодовое смещение&nbsp;K, зашифровать файл с&nbsp;указанным именем.</p>
<p class="tsk"><font face="Arial">Param58</font>. Описать процедуру DecodeText(S,&nbsp;K), которая дешифрует текстовый файл с&nbsp;именем&nbsp;S, зашифрованный с использованием кодового смещения&nbsp;K (способ шифрования описан в задании Param57). Используя эту&nbsp;процедуру и&nbsp;зная кодовое смещение&nbsp;K, расшифровать файл с&nbsp;указанным именем.</p>
<p class="cmt"><h2>Записи</h2></p>
<p class="cmt">При вводе и&nbsp;выводе каждой даты в&nbsp;заданиях Param59&#150;Param63 вначале указывается день, затем номер месяца, затем год. При&nbsp;вводе каждой точки в&nbsp;заданиях Param64&#150;Param70 вначале указывается ее&nbsp;абсцисса (x-координата), затем ее&nbsp;ордината (y-координата).</p>
<p class="tsk"><font face="Arial">Param59</font>. Описать тип TDate&nbsp;&#151; запись с&nbsp;полями целого типа Day (день), Month (месяц) и&nbsp;Year (год)&nbsp;&#151; и&nbsp;функцию LeapYear(D) логического типа с&nbsp;параметром типа TDate, которая возвращает True, если год в&nbsp;дате&nbsp;D является високосным, и&nbsp;False в&nbsp;противном случае. Вывести значение функции LeapYear для пяти данных дат (предполагается, что все даты являются правильными). <b>Високосным</b> считается год, делящийся на&nbsp;4, за&nbsp;исключением тех&nbsp;годов, которые делятся на&nbsp;100 и&nbsp;не&nbsp;делятся на&nbsp;400.</p>
<p class="tsk"><font face="Arial">Param60</font>. Используя тип TDate и&nbsp;функцию LeapYear (см.&nbsp;задание Param59), описать функцию DaysInMonth(D) целого типа с&nbsp;параметром типа TDate, которая возвращает количество дней для&nbsp;месяца, указанного в&nbsp;дате&nbsp;D. Вывести значение функции DaysInMonth для&nbsp;пяти данных дат (предполагается, что&nbsp;все даты являются правильными).</p>
<p class="tsk"><font face="Arial">Param61</font>. Используя тип TDate и&nbsp;функцию DaysInMonth (см.&nbsp;задания Param59 и&nbsp;Param60), описать функцию CheckDate(D) целого типа с&nbsp;параметром типа TDate, которая проверяет правильность даты, указанной в&nbsp;параметре&nbsp;D. Если дата&nbsp;D является правильной, то&nbsp;функция возвращает&nbsp;0; если в&nbsp;дате указан неверный номер месяца, то&nbsp;функция возвращает&nbsp;1; если в&nbsp;дате указан неверный день для&nbsp;данного месяца, то&nbsp;возвращается&nbsp;2. Вывести значение функции CheckDate для&nbsp;пяти данных дат.</p>
<p class="tsk"><font face="Arial">Param62</font>. Используя тип TDate и&nbsp;функции DaysInMonth и&nbsp;CheckDate (см.&nbsp;задания  Param59&#150;Param61), описать процедуру PrevDate(D) с&nbsp;параметром типа TDate, которая преобразует дату&nbsp;D к&nbsp;предыдущей дате (если дата&nbsp;D является неправильной, то&nbsp;она не&nbsp;изменяется). Запись&nbsp;D является входным и&nbsp;выходным параметром. Применить процедуру PrevDate к&nbsp;пяти данным датам.</p>
<p class="tsk"><font face="Arial">Param63</font>. Используя тип TDate и&nbsp;функции DaysInMonth и&nbsp;CheckDate (см.&nbsp;задания  Param59&#150;Param61), описать процедуру NextDate(D) с&nbsp;параметром типа TDate, которая преобразует дату&nbsp;D к&nbsp;следующей дате (если дата&nbsp;D является неправильной, то&nbsp;она не&nbsp;изменяется). Запись&nbsp;D является входным и&nbsp;выходным параметром. Применить процедуру NextDate к&nbsp;пяти данным датам.</p>
<p class="tsk"><font face="Arial">Param64</font>. Описать тип TPoint&nbsp;&#151; запись с&nbsp;полями вещественного типа&nbsp;X и&nbsp;Y (координаты точки на&nbsp;плоскости)&nbsp;&#151; и&nbsp;функцию Leng(A,&nbsp;B) вещественного типа, находящую длину отрезка AB на&nbsp;плоскости по&nbsp;координатам его&nbsp;концов: </p><center>|AB|&nbsp;=&nbsp;((A.X&nbsp;&#150;&nbsp;B.X)<sup>2</sup>&nbsp;+&nbsp;(A.Y&nbsp;&#150;&nbsp;B.Y)<sup>2</sup>)<sup><small>1/2</small></sup></center><p class="hntc">(A и&nbsp;B&nbsp;&#151; параметры типа TPoint). С&nbsp;помощью этой функции найти длины отрезков&nbsp;AB, AC,&nbsp;AD, если даны координаты точек&nbsp;A,&nbsp;B, C,&nbsp;D.</p>
<p class="tsk"><font face="Arial">Param65</font>. Используя тип TPoint и&nbsp;функцию Leng (см.&nbsp;задание Param64), описать тип TTriangle&nbsp;&#151; запись с&nbsp;полями&nbsp;A, B,&nbsp;C типа TPoint (вершины треугольника)&nbsp;&#151; и&nbsp;функцию Perim(T) вещественного типа, находящую периметр треугольника&nbsp;T (T&nbsp;&#151; параметр типа TTriangle). С&nbsp;помощью этой функции найти периметры треугольников&nbsp;ABC, ABD,&nbsp;ACD, если даны координаты точек&nbsp;A,&nbsp;B, C,&nbsp;D.</p>
<p class="tsk"><font face="Arial">Param66</font>. Используя типы TPoint, TTriangle и&nbsp;функции Leng и&nbsp;Perim (см.&nbsp;задания Param64 и&nbsp;Param65), описать функцию Area(T) вещественного типа, находящую площадь треугольника&nbsp;T (T&nbsp;&#151; параметр типа TTriangle) по <b>формуле Герона</b>: </p><center>S<sub>ABC</sub>&nbsp;=&nbsp;(p&#183;(p&nbsp;&#150;&nbsp;|AB|)&#183;(p&nbsp;&#150;&nbsp;|AC|)&#183;(p&nbsp;&#150;&nbsp;|BC|))<sup><small>1/2</small></sup>,</center><p class="hntc">где p&nbsp;&#151; <b>полупериметр</b>. С&nbsp;помощью этой функции найти площади треугольников&nbsp;ABC, ABD,&nbsp;ACD, если даны координаты точек&nbsp;A,&nbsp;B, C,&nbsp;D.</p>
<p class="tsk"><font face="Arial">Param67</font>. Используя типы TPoint, TTriangle и&nbsp;функции Leng и&nbsp;Area (см.&nbsp;задания Param64&#150;Param66), описать функцию Dist(P,&nbsp;A,&nbsp;B) вещественного типа (P, A,&nbsp;B&nbsp;&#151; параметры типа TPoint), находящую расстояние D(P,&nbsp;AB) от&nbsp;точки&nbsp;P до&nbsp;прямой AB по формуле</p><center>D(P,&nbsp;AB)&nbsp;=&nbsp;2&#183;S<sub>PAB</sub>/|AB|,</center><p class="hntc">где S<sub>PAB</sub>&nbsp;&#151; площадь треугольника&nbsp;PAB. С&nbsp;помощью этой функции найти расстояния от&nbsp;точки&nbsp;P до&nbsp;прямых&nbsp;AB, AC,&nbsp;BC, если даны координаты точек&nbsp;P,&nbsp;A, B,&nbsp;C.</p>
<p class="tsk"><font face="Arial">Param68</font>. Используя типы TPoint, TTriangle и&nbsp;функцию Dist (см. задания Param64, Param65, Param67), описать процедуру Heights(T,&nbsp;h<sub>1</sub>,&nbsp;h<sub>2</sub>,&nbsp;h<sub>3</sub>), находящую высоты&nbsp;h<sub>1</sub>, h<sub>2</sub>,&nbsp;h<sub>3</sub> треугольника&nbsp;T (T&nbsp;&#151; входной параметр типа TTriangle, h<sub>1</sub>, h<sub>2</sub>, h<sub>3</sub>&nbsp;&#151; выходные вещественные параметры), проведенные соответственно из&nbsp;вершин T.A, T.B, T.C. С&nbsp;помощью этой процедуры найти высоты треугольников&nbsp;ABC, ABD,&nbsp;ACD, если даны координаты точек&nbsp;A,&nbsp;B, C,&nbsp;D.</p>
<p class="tsk"><font face="Arial">Param69</font>. Используя тип TPoint и&nbsp;функцию Leng (см.&nbsp;задание Param64), описать функцию PerimN(P,&nbsp;N) вещественного типа, находящую периметр N-угольника, вершины которого (в&nbsp;порядке их&nbsp;обхода) передаются в&nbsp;массиве&nbsp;P размера&nbsp;N (&gt;&nbsp;2) с&nbsp;элементами типа TPoint. С&nbsp;помощью этой функции найти периметры трех многоугольников, если дано число их&nbsp;сторон и&nbsp;координаты их&nbsp;вершин.</p>
<p class="tsk"><font face="Arial">Param70</font>. Используя типы TPoint, TTriangle и&nbsp;функцию Area (см.&nbsp;задания Param64&#150;Param66), описать функцию AreaN(P,&nbsp;N) вещественного типа, находящую площадь выпуклого N-угольника, вершины которого (в&nbsp;порядке их&nbsp;обхода) передаются в&nbsp;массиве&nbsp;P размера&nbsp;N (&gt;&nbsp;2) с&nbsp;элементами типа TPoint. С&nbsp;помощью этой функции найти площади трех многоугольников, если дано число их&nbsp;сторон и&nbsp;координаты их&nbsp;вершин.</p>
<hr noshade><div align=right><font size=-1>Дата генерации страницы: 22.03.2005.</font></div></body></html>
