<!-- Programming Taskbook 4.4 | Copyright (c) M. Abramyan, 1998-2005 -->
<html><head><meta http-equiv="pragma" content="no-cache"><meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<title>Programming Taskbook 4.4 | Рекурсия</title>
</head><body vlink="#003366" link="#003366"><style>
H1{font-family:"Arial";font-size:20pt;text-indent:0;margin-top:10; margin-right:10; margin-bottom:0; margin-left:10;}
H2{font-family:"Arial";font-size:16pt;text-indent:0;margin: 20 10 0 10;}
H3{font-family:"Arial";font-size:12pt;text-indent:0;margin: 20 10 0 10;}
P{font-family:"Times New Roman";font-size:12pt;text-indent:0;margin-top:0; margin-right:10; margin-bottom:0; margin-left:10;}
center{font-family:"Times New Roman";font-size:12pt;}
TABLE{margin-top:0; margin-bottom:0;}
TD{font-family:"Times New Roman";font-size:12pt;}
LI{font-family:"Times New Roman";font-size:12pt;}
UL{font-family:"Times New Roman";font-size:12pt;}
P.tsk{text-align:left;text-indent:-50;margin-top:5; margin-left:60;}
P.hnt{text-align:left;margin-left:60;}
P.hntc{text-align:left;margin-left:60;}
P.hntq{text-align:left;margin-left: 60;}
P.cmt{text-align:left;margin-top:5;}
P.ttt{text-align:left;}
P.cnt{text-align:center;}
P.qte{text-align:left;margin-left:120;margin-top:0;margin-bottom:0;}
blockquote{font-family:"Times New Roman";text-align:left;margin-left:100;margin-top:0; margin-bottom:0;}
P.cmtc{text-align:left;}
P.cmtq{text-align:left;}
SUB{font-family:"Times New Roman";font-size:8pt;}
SUP{font-family:"Times New Roman";font-size:8pt;}
P.foot{text-align:right;font-size:8pt;margin-right:0;}
</style>
<script language="javascript" src="back.js">
</script>
<font face="Arial" size=+3><b>Programming Taskbook 4</b><br></font>
<font face="Arial" size=+1>Электронный задачник по программированию</font>
<div align=right><font size = -1>&copy;&nbsp;&nbsp;М.&nbsp;Э.&nbsp;Абрамян,&nbsp;1998&#150;2005</font></div>
<hr noshade>
<div align=center><font size=-1>
[<a href="indexd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/indexd.htm">Общее&nbsp;описание</a>] [<a href="remarksd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/remarksd.htm">Предварительные&nbsp;замечания</a>] [<a href="begind.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/begind.htm">Ввод&nbsp;и&nbsp;вывод&nbsp;данных,&nbsp;оператор&nbsp;присваивания</a>] [<a href="integerd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/integerd.htm">Целые&nbsp;числа</a>] [<a href="booleand.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/booleand.htm">Логические&nbsp;выражения</a>] [<a href="ifd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/ifd.htm">Условный&nbsp;оператор</a>] [<a href="cased.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/cased.htm">Оператор&nbsp;выбора</a>] [<a href="ford.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/ford.htm">Цикл&nbsp;с&nbsp;параметром</a>] [<a href="whiled.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/whiled.htm">Цикл&nbsp;с&nbsp;условием</a>] [<a href="seriesd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/seriesd.htm">Последовательности</a>] [<a href="procd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/procd.htm">Процедуры&nbsp;и&nbsp;функции</a>] [<a href="minmaxd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/minmaxd.htm">Минимумы&nbsp;и&nbsp;максимумы</a>] [<a href="arrayd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/arrayd.htm">Одномерные&nbsp;массивы</a>] [<a href="matrixd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/matrixd.htm">Двумерные&nbsp;массивы&nbsp;(матрицы)</a>] [<a href="stringd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/stringd.htm">Символы&nbsp;и&nbsp;строки</a>] [<a href="filed.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/filed.htm">Двоичные&nbsp;(типизированные)&nbsp;файлы</a>] [<a href="textd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/textd.htm">Текстовые&nbsp;файлы</a>] [<a href="paramd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/paramd.htm">Составные&nbsp;типы&nbsp;данных&nbsp;в&nbsp;процедурах&nbsp;и&nbsp;функциях</a>] [<b>Рекурсия</b>] [<a href="pointerd.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/pointerd.htm">Указатели&nbsp;и&nbsp;динамические&nbsp;структуры&nbsp;данных</a>] [<a href="demod.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/demod.htm">Задания&nbsp;демо-версии</a>]
</font></div><hr noshade><div align=right><font size=-1>Стиль: [<b>DOS-программа</b>] [<a href="recurw.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/recurw.htm">Windows-программа</a>] [<a href="recur.htm" tppabs="http://sunschool.math.rsu.ru/taskbook/recur.htm">Книга</a>]</font></div>

<p class="cmt"><h1>Рекурсия</h1> <h2>Простейшие рекурсивные алгоритмы</h2></p>
<p class="cmt">Задания этого раздела можно легко решить и&nbsp;без использования рекурсии. Данное обстоятельство связано с&nbsp;тем, что в&nbsp;заданиях рассматриваются простейшие примеры рекурсии, легко сводимые к&nbsp;итерационным алгоритмам. Более того, в&nbsp;некоторых случаях непосредственные вычисления по рекурсивным формулам оказываются весьма неэффективными (см.,&nbsp;например, задания Recur4 и&nbsp;Recur6). Однако именно на&nbsp;подобных примерах проще всего получить первоначальные навыки разработки рекурсивных алгоритмов.</p>
<p class="tsk"><font face="Arial">Recur1*</font>. Описать рекурсивную функцию Fact(N) вещественного типа, вычисляющую значение факториала</p><center>N!&nbsp;=&nbsp;1<font face="Courier">*</font>2<font face="Courier">*</font>&#133;<font face="Courier">*</font>N</center><p class="hntc">(N&nbsp;&gt;&nbsp;0&nbsp;&#151; параметр целого типа). С&nbsp;помощью этой функции вычислить факториалы пяти данных чисел.</p>
<p class="tsk"><font face="Arial">Recur2</font>. Описать рекурсивную функцию Fact2(N) вещественного типа, вычисляющую значение двойного факториала</p><center>N!!&nbsp;=&nbsp;N<font face="Courier">*</font>(N&#150;2)<font face="Courier">*</font>(N&#150;4)<font face="Courier">*</font>&#133;</center><p class="hntc">(N&nbsp;&gt;&nbsp;0&nbsp;&#151; параметр целого типа; последний сомножитель в&nbsp;произведении равен&nbsp;2, если N&nbsp;&#151; четное число, и&nbsp;1, если N&nbsp;&#151; нечетное). С&nbsp;помощью этой функции вычислить двойные факториалы пяти данных чисел.</p>
<p class="tsk"><font face="Arial">Recur3</font>. Описать рекурсивную функцию PowerN(X,&nbsp;N) вещественного типа, находящую значение N-й&nbsp;степени числа&nbsp;X по&nbsp;формулам: </p><center>X^{&nbsp;0}&nbsp;=&nbsp;1,<br>X^{&nbsp;N}&nbsp;=&nbsp;(X^{&nbsp;N/2})^{2} при четных N&nbsp;&gt;&nbsp;0, &nbsp; &nbsp; &nbsp; &nbsp;X^{&nbsp;N}&nbsp;=&nbsp;X<font face="Courier">*</font>X^{&nbsp;N&#150;1} при нечетных N&nbsp;&gt;&nbsp;0,<br>X^{&nbsp;N}&nbsp;=&nbsp;1/X^{&nbsp;&#150;N} при N&nbsp;&lt;&nbsp;0</center><p class="hntc">(X&nbsp;&lt;&gt;&nbsp;0&nbsp;&#151; вещественное число, N&nbsp;&#151; целое; в&nbsp;формуле для четных&nbsp;N должна использоваться операция целочисленного деления). С&nbsp;помощью этой функции найти значения X^{&nbsp;N} для данного&nbsp;X при&nbsp;пяти данных значениях&nbsp;N.</p>
<p class="tsk"><font face="Arial">Recur4</font>. Описать рекурсивную функцию Fib1(N) целого типа, вычисляющую N-й элемент последовательности чисел Фибоначчи (N&nbsp;&#151; целое число): </p><center>F[1]&nbsp;=&nbsp;F[2]&nbsp;=&nbsp;1, &nbsp; &nbsp; &nbsp; &nbsp;F[K]&nbsp;=&nbsp;F[K&#150;2]&nbsp;+&nbsp;F[K&#150;1], &nbsp; &nbsp;K&nbsp;=&nbsp;3,&nbsp;4,&nbsp;&#133;&nbsp;.</center><p class="hntc">С&nbsp;помощью этой функции найти пять чисел Фибоначчи с&nbsp;данными номерами, и&nbsp;вывести эти&nbsp;числа вместе с&nbsp;количеством рекурсивных вызовов функции Fib1, потребовавшихся для&nbsp;их&nbsp;нахождения.</p>
<p class="tsk"><font face="Arial">Recur5</font>. Описать рекурсивную функцию Fib2(N) целого типа, вычисляющую N-й элемент последовательности чисел Фибоначчи (N&nbsp;&#151; целое число): </p><center>F[1]&nbsp;=&nbsp;F[2]&nbsp;=&nbsp;1, &nbsp; &nbsp; &nbsp; &nbsp;F[K]&nbsp;=&nbsp;F[K&#150;2]&nbsp;+&nbsp;F[K&#150;1], &nbsp; &nbsp;K&nbsp;=&nbsp;3,&nbsp;4,&nbsp;&#133;&nbsp;.</center><p class="hntc">Считать, что&nbsp;номер&nbsp;N не&nbsp;превосходит&nbsp;20. Для&nbsp;уменьшения количества рекурсивных вызовов по&nbsp;сравнению с&nbsp;функцией Fib1 (см.&nbsp;задание Recur4) создать вспомогательный массив для&nbsp;хранения уже&nbsp;вычисленных чисел Фибоначчи и&nbsp;обращаться к&nbsp;нему при&nbsp;выполнении функции Fib2. С&nbsp;помощью функции Fib2 найти пять чисел Фибоначчи с&nbsp;данными номерами.</p>
<p class="tsk"><font face="Arial">Recur6</font>. Описать рекурсивную функцию Combin1(N,&nbsp;K) целого типа, находящую C(N,&nbsp;K)&nbsp;&#151; число сочетаний из&nbsp;N&nbsp;элементов по&nbsp;K&nbsp;&#151; с&nbsp;помощью рекуррентного соотношения: </p><center>C(N,&nbsp;0)&nbsp;=&nbsp;C(N,&nbsp;N)&nbsp;=&nbsp;1,<br>C(N,&nbsp;K)&nbsp;=&nbsp;C(N&nbsp;&#150;&nbsp;1,&nbsp;K)&nbsp;+&nbsp;C(N&nbsp;&#150;&nbsp;1,&nbsp;K&nbsp;&#150;&nbsp;1) &nbsp; &nbsp;при 0&nbsp;&lt;&nbsp;K&nbsp;&lt;&nbsp;N.</center><p class="hntc">Параметры функции&nbsp;&#151; целые числа; N&nbsp;&gt;&nbsp;0, 0&nbsp;&lt;=&nbsp;K&nbsp;&lt;=&nbsp;N. Дано число&nbsp;N и&nbsp;пять различных значений&nbsp;K. Вывести числа&nbsp;C(N,&nbsp;K) вместе с&nbsp;количеством рекурсивных вызовов функции Combin1, потребовавшихся для&nbsp;их&nbsp;нахождения.</p>
<p class="tsk"><font face="Arial">Recur7</font>. Описать рекурсивную функцию Combin2(N,&nbsp;K) целого типа, находящую C(N,&nbsp;K)&nbsp;&#151; число сочетаний из&nbsp;N&nbsp;элементов по&nbsp;K&nbsp;&#151; с&nbsp;помощью рекуррентного соотношения: </p><center>C(N,&nbsp;0)&nbsp;=&nbsp;C(N,&nbsp;N)&nbsp;=&nbsp;1,<br>C(N,&nbsp;K)&nbsp;=&nbsp;C(N&nbsp;&#150;&nbsp;1,&nbsp;K)&nbsp;+&nbsp;C(N&nbsp;&#150;&nbsp;1,&nbsp;K&nbsp;&#150;&nbsp;1) &nbsp; &nbsp;при 0&nbsp;&lt;&nbsp;K&nbsp;&lt;&nbsp;N.</center><p class="hntc">Параметры функции&nbsp;&#151; целые числа; N&nbsp;&gt;&nbsp;0, 0&nbsp;&lt;=&nbsp;K&nbsp;&lt;=&nbsp;N. Считать, что&nbsp;параметр&nbsp;N не&nbsp;превосходит&nbsp;20. Для&nbsp;уменьшения количества рекурсивных вызовов по&nbsp;сравнению с&nbsp;функцией Combin1 (см.&nbsp;задание Recur6) описать вспомогательный двумерный массив для&nbsp;хранения уже&nbsp;вычисленных чисел C(N,&nbsp;K) и&nbsp;обращаться к&nbsp;нему при&nbsp;выполнении функции Combin2. С&nbsp;помощью функции Combin2 найти числа C(N,&nbsp;K) для&nbsp;данного значения&nbsp;N и&nbsp;пяти различных значений&nbsp;K.</p>
<p class="tsk"><font face="Arial">Recur8</font>. Описать рекурсивную функцию RootK(X,&nbsp;K,&nbsp;N) вещественного типа, находящую приближенное значение корня K-й&nbsp;степени из&nbsp;числа&nbsp;X по&nbsp;формуле: </p><center>Y[0]&nbsp;=&nbsp;1, &nbsp; &nbsp; &nbsp; &nbsp;Y[N+1]&nbsp;=&nbsp;Y[N]&nbsp;&#150;&nbsp;(Y[N]&nbsp;&#150;&nbsp;X/(Y[N])^{K&#150;1})/K,</center><p class="hntc">где Y[N] обозначает RootK(X,&nbsp;K,&nbsp;N) при&nbsp;фиксированных&nbsp;X и&nbsp;K. Параметры функции: X&nbsp;(&gt;&nbsp;0)&nbsp;&#151; вещественное число, K&nbsp;(&gt;&nbsp;1) и&nbsp;N&nbsp;(&gt;&nbsp;0)&nbsp;&#151; целые. С&nbsp;помощью функции RootK найти для данного числа&nbsp;X приближенные значения его&nbsp;корня K-й&nbsp;степени при&nbsp;шести данных значениях&nbsp;N.</p>
<p class="tsk"><font face="Arial">Recur9</font>. Описать рекурсивную функцию NOD(A,&nbsp;B) целого типа, находящую наибольший общий делитель (НОД) двух целых положительных чисел&nbsp;A и&nbsp;B, используя алгоритм Евклида:</p><center>НОД(A,&nbsp;B)&nbsp;=&nbsp;НОД(B, A&nbsp;mod&nbsp;B), &nbsp; &nbsp;если B&nbsp;&lt;&gt;&nbsp;0; &nbsp; &nbsp; &nbsp; &nbsp;НОД(A,&nbsp;0)&nbsp;=&nbsp;A.</center><p class="hntc">С&nbsp;помощью этой функции найти НОД(A,&nbsp;B), НОД(A,&nbsp;C), НОД(A,&nbsp;D), если даны числа&nbsp;A, B, C,&nbsp;D.</p>
<p class="tsk"><font face="Arial">Recur10</font>. Описать рекурсивную функцию DigitSum(K) целого типа, которая находит сумму цифр целого числа&nbsp;K, не&nbsp;используя оператор цикла. С&nbsp;помощью этой функции найти суммы цифр для пяти данных целых чисел.</p>
<p class="tsk"><font face="Arial">Recur11</font>. Описать рекурсивную функцию MaxInt(A, N) целого типа, которая находит максимальный элемент целочисленного массива&nbsp;A размера&nbsp;N (1&nbsp;&lt;=&nbsp;N&nbsp;&lt;=&nbsp;10), не&nbsp;используя оператор цикла. С&nbsp;помощью этой функции найти максимальные элементы массивов&nbsp;A, B,&nbsp;C размера&nbsp;NA, NB,&nbsp;NC соответственно.</p>
<p class="tsk"><font face="Arial">Recur12</font>. Описать рекурсивную функцию DigitCount(S) целого типа, которая находит количество цифр в&nbsp;строке&nbsp;S, не&nbsp;используя оператор цикла. С&nbsp;помощью этой функции найти количество цифр в&nbsp;каждой из пяти данных строк.</p>
<p class="tsk"><font face="Arial">Recur13</font>. Описать рекурсивную функцию Palindrom(S) логического типа, возвращающую True, если строка&nbsp;S является палиндромом (то&nbsp;есть читается одинаково слева направо и&nbsp;справа налево), и&nbsp;False в&nbsp;противном случае. Оператор цикла в&nbsp;теле функции не&nbsp;использовать. Вывести значения функции Palindrom для&nbsp;пяти данных строк.</p>
<p class="cmt"><h2>Разбор выражений</h2></p>
<p class="cmt">Во всех заданиях данного пункта предполагается, что&nbsp;исходные строки, определяющие выражения, не&nbsp;содержат пробелов. При&nbsp;выполнении заданий не&nbsp;следует использовать оператор цикла.</p>
<p class="tsk"><font face="Arial">Recur14</font>. Вывести значение целочисленного выражения, заданного в&nbsp;виде строки&nbsp;S. Выражение определяется следующим образом: </p><center><table><tr><td align=left>&lt;выражение&gt; <td align=center>::= <td align=left>&lt;цифра&gt; | &lt;выражение&gt;&nbsp;+&nbsp;&lt;цифра&gt; |<tr><td align=left>&nbsp;<td align=center>&nbsp;<td align=left>&lt;выражение&gt;&nbsp;&#150;&nbsp;&lt;цифра&gt;</table></center>
<p class="tsk"><font face="Arial">Recur15</font>. Вывести значение целочисленного выражения, заданного в&nbsp;виде строки&nbsp;S. Выражение определяется следующим образом: </p><center><table><tr><td align=left>&lt;выражение&gt; <td align=center>::= <td align=left>&lt;терм&gt; | &lt;выражение&gt;&nbsp;+&nbsp;&lt;терм&gt; |<tr><td align=left>&nbsp;<td align=center>&nbsp;<td align=left>&lt;выражение&gt;&nbsp;&#150;&nbsp;&lt;терм&gt;<tr><td align=left>&lt;терм&gt;      <td align=center>::= <td align=left>&lt;цифра&gt; | &lt;терм&gt;&nbsp;*&nbsp;&lt;цифра&gt;</table></center>
<p class="tsk"><font face="Arial">Recur16</font>. Вывести значение целочисленного выражения, заданного в&nbsp;виде строки&nbsp;S. Выражение определяется следующим образом: </p><center><table><tr><td align=left>&lt;выражение&gt; <td align=center>::= <td align=left>&lt;терм&gt; | &lt;выражение&gt;&nbsp;+&nbsp;&lt;терм&gt; |<tr><td align=left>&nbsp;<td align=center>&nbsp;<td align=left>&lt;выражение&gt;&nbsp;&#150;&nbsp;&lt;терм&gt;<tr><td align=left>&lt;терм&gt;      <td align=center>::= <td align=left>&lt;элемент&gt; | &lt;терм&gt;&nbsp;*&nbsp;&lt;элемент&gt;<tr><td align=left>&lt;элемент&gt;   <td align=center>::= <td align=left>&lt;цифра&gt; | (&lt;выражение&gt;)</table></center>
<p class="tsk"><font face="Arial">Recur17*</font>. Вывести значение целочисленного выражения, заданного в&nbsp;виде строки&nbsp;S. Выражение определяется следующим образом: </p><center><table><tr><td align=left>&lt;выражение&gt; <td align=center>::= <td align=left>&lt;цифра&gt; |<tr><td align=left>&nbsp;<td align=center>&nbsp;<td align=left>(&lt;выражение&gt;&lt;знак&gt;&lt;выражение&gt;)<tr><td align=left>&lt;знак&gt;      <td align=center>::= <td align=left>+ | &#150; | *</table></center>
<p class="tsk"><font face="Arial">Recur18*</font>. Проверить правильность выражения, заданного в&nbsp;виде непустой строки&nbsp;S (выражение определяется по&nbsp;тем&nbsp;же правилам, что&nbsp;и&nbsp;в&nbsp;задании Recur17). Если выражение составлено правильно, то&nbsp;вывести True, иначе вывести False.</p>
<p class="tsk"><font face="Arial">Recur19</font>. Проверить правильность выражения, заданного в&nbsp;виде непустой строки&nbsp;S (выражение определяется по&nbsp;тем&nbsp;же правилам, что&nbsp;и&nbsp;в&nbsp;задании Recur17). Если выражение составлено правильно, то&nbsp;вывести&nbsp;0, в&nbsp;противном случае вывести номер первого ошибочного, лишнего или&nbsp;недостающего символа в&nbsp;строке&nbsp;S.</p>
<p class="tsk"><font face="Arial">Recur20</font>. Вывести значение целочисленного выражения, заданного в&nbsp;виде строки&nbsp;S. Выражение определяется следующим образом (функция&nbsp;M возвращает максимальный из&nbsp;своих параметров, а&nbsp;функция&nbsp;m&nbsp;&#151; минимальный): </p><center><table><tr><td align=left>&lt;выражение&gt; <td align=center>::= <td align=left>&lt;цифра&gt; | M(&lt;выражение&gt;&nbsp;,&nbsp;&lt;выражение&gt;) | <tr><td align=left>&nbsp;<td align=center>&nbsp;<td align=left>m(&lt;выражение&gt;&nbsp;,&nbsp;&lt;выражение&gt;)</table></center>
<p class="tsk"><font face="Arial">Recur21</font>. Вывести значение логического выражения, заданного в&nbsp;виде строки&nbsp;S. Выражение определяется следующим образом ("T"&nbsp;&#151; True, "F"&nbsp;&#151; False): </p><center><table><tr><td align=left>&lt;выражение&gt; <td align=center>::= <td align=left>T | F | And(&lt;выражение&gt;&nbsp;,&nbsp;&lt;выражение&gt;) | <tr><td align=left>&nbsp;<td align=center>&nbsp;<td align=left>Or(&lt;выражение&gt;&nbsp;,&nbsp;&lt;выражение&gt;)</table></center>
<p class="tsk"><font face="Arial">Recur22</font>. Вывести значение целочисленного выражения, заданного в&nbsp;виде строки&nbsp;S. Выражение определяется следующим образом (функция&nbsp;M возвращает максимальный из&nbsp;своих параметров, а&nbsp;функция&nbsp;m&nbsp;&#151; минимальный): </p><center><table><tr><td align=left>&lt;выражение&gt; <td align=center>::= <td align=left>&lt;цифра&gt; | M(&lt;параметры&gt;) | m(&lt;параметры&gt;)<tr><td align=left>&lt;параметры&gt; <td align=center>::= <td align=left>&lt;выражение&gt; | &lt;выражение&gt;&nbsp;,&nbsp;&lt;параметры&gt;</table></center>
<p class="tsk"><font face="Arial">Recur23</font>. Вывести значение логического выражения, заданного в&nbsp;виде строки&nbsp;S. Выражение определяется следующим образом ("T"&nbsp;&#151; True, "F"&nbsp;&#151; False): </p><center><table><tr><td align=left>&lt;выражение&gt; <td align=center>::= <td align=left>T | F | And(&lt;параметры&gt;) | Or(&lt;параметры&gt;)<tr><td align=left>&lt;параметры&gt; <td align=center>::= <td align=left>&lt;выражение&gt; | &lt;выражение&gt;&nbsp;,&nbsp;&lt;параметры&gt;</table></center>
<p class="tsk"><font face="Arial">Recur24</font>. Вывести значение логического выражения, заданного в&nbsp;виде строки&nbsp;S. Выражение определяется следующим образом ("T"&nbsp;&#151; True, "F"&nbsp;&#151; False): </p><center><table><tr><td align=left>&lt;выражение&gt; <td align=center>::= <td align=left>T | F | And(&lt;параметры&gt;) | <tr><td align=left>&nbsp;<td align=center>&nbsp;<td align=left>Or(&lt;параметры&gt;) | Not(&lt;выражение&gt;)<tr><td align=left>&lt;параметры&gt; <td align=center>::= <td align=left>&lt;выражение&gt; | &lt;выражение&gt;&nbsp;,&nbsp;&lt;параметры&gt;</table></center>
<p class="cmt"><h2>Перебор с возвратом</h2></p>
<p class="tsk"><font face="Arial">Recur25*</font>. Дано дерево глубины&nbsp;N, каждая внутренняя вершина которого имеет K&nbsp;(&lt;&nbsp;10) непосредственных потомков (нумеруются от&nbsp;1 до&nbsp;K). Корень дерева имеет номер&nbsp;0. Записать в&nbsp;текстовый файл с&nbsp;данным именем все возможные пути, ведущие от&nbsp;корня к&nbsp;листьям. Перебирать пути, начиная с&nbsp;"самого левого" и&nbsp;заканчивая "самым правым" (при&nbsp;этом первыми заменять конечные элементы пути).</p>
<p class="tsk"><font face="Arial">Recur26</font>. Дано дерево глубины&nbsp;N, каждая внутренняя вершина которого имеет K&nbsp;(&lt;&nbsp;10) непосредственных потомков (нумеруются от&nbsp;1 до&nbsp;K). Корень дерева имеет номер&nbsp;0. Записать в&nbsp;текстовый файл с&nbsp;данным именем все&nbsp;пути, ведущие от&nbsp;корня к&nbsp;листьям и&nbsp;удовлетворяющие следующему условию: никакие соседние элементы пути не&nbsp;нумеруются одной и&nbsp;той&nbsp;же цифрой. Порядок перебора путей такой&nbsp;же, как&nbsp;в&nbsp;задании Recur25.</p>
<p class="tsk"><font face="Arial">Recur27</font>. Дано дерево глубины&nbsp;N (N&nbsp;&#151; четное), каждая внутренняя вершина которого имеет 2&nbsp;непосредственных потомка: A с&nbsp;весом&nbsp;1 и&nbsp;B с&nbsp;весом&nbsp;&#150;1. Корень дерева&nbsp;C имеет вес&nbsp;0. Записать в&nbsp;текстовый файл с&nbsp;данным именем все&nbsp;пути от&nbsp;корня к&nbsp;листьям, удовлетворяющие следующему условию: суммарный вес элементов пути равен&nbsp;0. Порядок перебора путей такой&nbsp;же, как&nbsp;в&nbsp;задании Recur25.</p>
<p class="tsk"><font face="Arial">Recur28</font>. Дано дерево глубины&nbsp;N того&nbsp;же&nbsp;типа, что&nbsp;и&nbsp;в&nbsp;задании Recur27. Записать в текстовый файл с данным именем все&nbsp;пути от&nbsp;корня к&nbsp;листьям, удовлетворяющие следующему условию: суммарный вес элементов для&nbsp;любого начального отрезка пути неотрицателен. Порядок перебора путей такой&nbsp;же, как&nbsp;в&nbsp;задании Recur25.</p>
<p class="tsk"><font face="Arial">Recur29</font>. Дано дерево глубины&nbsp;N, каждая внутренняя вершина которого имеет 3&nbsp;непосредственных потомка: A с&nbsp;весом&nbsp;1, B с&nbsp;весом&nbsp;0 и&nbsp;C с&nbsp;весом&nbsp;&#150;1. Корень дерева&nbsp;D имеет вес&nbsp;0. Записать в&nbsp;текстовый файл с&nbsp;данным именем все пути от&nbsp;корня к&nbsp;листьям, удовлетворяющие следующим условиям: суммарный вес элементов для&nbsp;любого начального отрезка пути неположителен, а&nbsp;суммарный вес всех элементов пути равен&nbsp;0. Порядок перебора путей такой&nbsp;же, как&nbsp;в&nbsp;задании Recur25.</p>
<p class="tsk"><font face="Arial">Recur30</font>. Дано дерево глубины&nbsp;N того&nbsp;же&nbsp;типа, что&nbsp;и&nbsp;в&nbsp;задании Recur29. Записать в&nbsp;текстовый файл с&nbsp;данным именем все пути от&nbsp;корня к&nbsp;листьям, удовлетворяющие следующим условиям: никакие соседние элементы пути не&nbsp;обозначаются одной и&nbsp;той&nbsp;же буквой, а&nbsp;суммарный вес всех элементов пути равен&nbsp;0. Порядок перебора путей такой&nbsp;же, как&nbsp;в&nbsp;задании Recur25.</p>
<hr noshade><div align=right><font size=-1>Дата генерации страницы: 22.03.2005.</font></div></body></html>
